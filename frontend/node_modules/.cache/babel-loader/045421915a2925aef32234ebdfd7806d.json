{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { Base } from \"../layout/base\";\nimport { isObject } from \"../util\";\nvar map = new Map();\nexport var registerLayout = function registerLayout(name, layoutOverride) {\n  if (map.get(name)) {\n    console.warn(\"The layout with the name \".concat(name, \" exists already, it will be overridden\"));\n  }\n\n  if (isObject(layoutOverride)) {\n    // tslint:disable-next-line: max-classes-per-file\n    var GLayout = /*#__PURE__*/function (_Base) {\n      _inherits(GLayout, _Base);\n\n      function GLayout(cfg) {\n        var _this;\n\n        _classCallCheck(this, GLayout);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(GLayout).call(this));\n\n        var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n        var props = {};\n        var defaultCfg = self.getDefaultCfg();\n        Object.assign(props, defaultCfg, layoutOverride, cfg);\n        Object.keys(props).forEach(function (key) {\n          var value = props[key];\n          self[key] = value;\n        });\n        return _this;\n      }\n\n      return GLayout;\n    }(Base);\n\n    map.set(name, GLayout);\n  } else {\n    map.set(name, layoutOverride);\n  }\n\n  return map.get(name);\n};\nexport var unRegisterLayout = function unRegisterLayout(name) {\n  if (map.has(name)) {\n    map.delete(name);\n  }\n};\nexport var getLayoutByName = function getLayoutByName(name) {\n  if (map.has(name)) {\n    return map.get(name);\n  }\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"module"}