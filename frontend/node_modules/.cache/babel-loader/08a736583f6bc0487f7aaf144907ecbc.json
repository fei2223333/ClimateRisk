{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { HOME_UPLOAD_FILE_BEGIN, HOME_UPLOAD_FILE_SUCCESS, HOME_UPLOAD_FILE_FAILURE, HOME_UPLOAD_FILE_DISMISS_ERROR } from './constants';\nimport { message } from \"antd\";\nimport Axios from 'axios';\nexport function uploadFile(data, isConan) {\n  return function (dispatch) {\n    // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_UPLOAD_FILE_BEGIN\n    });\n    var uploadUrl = isConan ? \"/conan/file\" : \"/spine/file\"; // Axios.defaults.baseURL = 'https://diagpanel.azurewebsites.net';\n\n    Axios.defaults.baseURL = 'http://127.0.0.1:8080';\n    return Axios(uploadUrl, {\n      method: 'post',\n      data: data,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (data) {\n      // const data = flag\n      //   ? {\n      //       list: [\n      //         {\n      //           version: 'A',\n      //           cluster: 'C-1',\n      //           api: 'API-1-1',\n      //           weight: 50,\n      //           label: 1,\n      //           score: 0.97,\n      //         },\n      //         {\n      //           version: 'A',\n      //           cluster: 'C-1',\n      //           api: 'API-1-1',\n      //           weight: 50,\n      //           label: 1,\n      //           score: 0.96,\n      //         },\n      //         {\n      //           version: 'A',\n      //           cluster: 'C-1',\n      //           api: 'API-1-1',\n      //           weight: 50,\n      //           label: 1,\n      //           score: 0.95,\n      //         },\n      //         {\n      //           version: 'A',\n      //           cluster: 'C-1',\n      //           api: 'API-1-1',\n      //           weight: 50,\n      //           label: 1,\n      //           score: 0.92,\n      //         },\n      //         {\n      //           version: 'A',\n      //           cluster: 'C-1',\n      //           api: 'API-1-1',\n      //           weight: 50,\n      //           label: 1,\n      //           score: 0.98,\n      //         },\n      //       ],\n      //     }\n      //   : {\n      //       parsed_log_file_path: 'mntlogs\\\\2022-03-23\\\\test.csv',\n      //       log_statistics: {\n      //         total_log_size: 10000,\n      //         template_num: 20,\n      //         log_template_mapping: {\n      //           temp_1: 2000,\n      //           temp_2: 500,\n      //           temp_3: 150,\n      //           temp_4: 800,\n      //           temp_5: 1200,\n      //         },\n      //       },\n      //       log_sample_results: {\n      //         Item_1: {\n      //           raw_log: 'receive block 203 from 230.106.70.20',\n      //           log_template: 'receive block * from *',\n      //           parameters: ['203', '230.106.70.20'],\n      //         },\n      //       },\n      //     };\n      if (data.status !== 200) throw new Error();\n      var beautifiedData;\n\n      if (isConan) {\n        beautifiedData = {\n          list: data.data.data.map(function (d, index) {\n            var s = '';\n            Object.keys(d.diagnosis_results).forEach(function (key) {\n              s += \"\".concat(key, \":\").concat(d.diagnosis_results[key], \", \");\n            });\n            var reg = /, $/gi;\n            s = s.replace(reg, '');\n            return {\n              rank: index + 1,\n              score: d.score,\n              rootCause: s\n            };\n          })\n        };\n      } else {\n        beautifiedData = data.data.data;\n      }\n\n      dispatch({\n        type: HOME_UPLOAD_FILE_SUCCESS,\n        data: beautifiedData,\n        isConan: isConan\n      }); //})\n      // .catch(err => {\n      // })\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: HOME_UPLOAD_FILE_FAILURE,\n        data: {\n          error: err\n        }\n      });\n      message.warn(err);\n    });\n  };\n}\nexport function dismissUploadFileError() {\n  return {\n    type: HOME_UPLOAD_FILE_DISMISS_ERROR\n  };\n}\nexport function useUploadFile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      uploadFilePending: state.home.uploadFilePending,\n      uploadFileError: state.home.uploadFileError\n    };\n  }, shallowEqual),\n      uploadFilePending = _useSelector.uploadFilePending,\n      uploadFileError = _useSelector.uploadFileError;\n\n  var boundAction = useCallback(function () {\n    return dispatch(uploadFile.apply(void 0, arguments));\n  }, [dispatch]);\n  var boundDismissError = useCallback(function () {\n    return dispatch(dismissUploadFileError());\n  }, [dispatch]);\n  return {\n    uploadFile: boundAction,\n    uploadFilePending: uploadFilePending,\n    uploadFileError: uploadFileError,\n    dismissUploadFileError: boundDismissError\n  };\n}\n\n__signature__(useUploadFile, \"useDispatch{dispatch}\\nuseSelector{{ uploadFilePending, uploadFileError }}\\nuseCallback{boundAction}\\nuseCallback{boundDismissError}\", function () {\n  return [useDispatch, useSelector];\n});\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_UPLOAD_FILE_BEGIN:\n      // Just after a request is sent\n      return _objectSpread({}, state, {\n        uploadFilePending: true,\n        uploadFileError: null,\n        isUploading: true\n      });\n\n    case HOME_UPLOAD_FILE_SUCCESS:\n      // The request is success\n      console.log(action.data);\n      return action.isConan ? _objectSpread({}, state, {\n        uploadFilePending: false,\n        uploadFileError: null,\n        isUploading: false,\n        conanData: action.data\n      }) : _objectSpread({}, state, {\n        uploadFilePending: false,\n        uploadFileError: null,\n        isUploading: false,\n        parsedData: action.data\n      });\n\n    case HOME_UPLOAD_FILE_FAILURE:\n      // The request is failed\n      return _objectSpread({}, state, {\n        uploadFilePending: false,\n        isUploading: false,\n        uploadFileError: action.data.error\n      });\n\n    case HOME_UPLOAD_FILE_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return _objectSpread({}, state, {\n        uploadFileError: null\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(uploadFile, \"uploadFile\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(dismissUploadFileError, \"dismissUploadFileError\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(useUploadFile, \"useUploadFile\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/uploadFile.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/uploadFile.js"],"names":["useEffect","useCallback","useDispatch","useSelector","shallowEqual","HOME_UPLOAD_FILE_BEGIN","HOME_UPLOAD_FILE_SUCCESS","HOME_UPLOAD_FILE_FAILURE","HOME_UPLOAD_FILE_DISMISS_ERROR","message","Axios","uploadFile","data","isConan","dispatch","type","uploadUrl","defaults","baseURL","method","headers","then","status","Error","beautifiedData","list","map","d","index","s","Object","keys","diagnosis_results","forEach","key","reg","replace","rank","score","rootCause","catch","err","console","log","error","warn","dismissUploadFileError","useUploadFile","state","uploadFilePending","home","uploadFileError","boundAction","boundDismissError","reducer","action","isUploading","conanData","parsedData"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SACEC,sBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,8BAJF,QAKO,aALP;AAMA,SAAQC,OAAR,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AACxC,SAAO,UAAAC,QAAQ,EAAI;AACjB;AACAA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGA,QAAMW,SAAS,GAAGH,OAAO,GAAC,aAAD,GAAe,aAAxC,CALiB,CAMjB;;AACAH,IAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AACA,WAAOR,KAAK,CAACM,SAAD,EAAW;AACrBG,MAAAA,MAAM,EAAE,MADa;AAErBP,MAAAA,IAAI,EAAJA,IAFqB;AAGrBQ,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHY,KAAX,CAAL,CAKJC,IALI,CAKC,UAAAT,IAAI,EAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAGA,IAAI,CAACU,MAAL,KAAgB,GAAnB,EAAwB,MAAM,IAAIC,KAAJ,EAAN;AACxB,UAAIC,cAAJ;;AACA,UAAIX,OAAJ,EAAa;AACXW,QAAAA,cAAc,GAAG;AACfC,UAAAA,IAAI,EAAEb,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAec,GAAf,CAAmB,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACrC,gBAAIC,CAAC,GAAG,EAAR;AACAC,YAAAA,MAAM,CAACC,IAAP,CAAYJ,CAAC,CAACK,iBAAd,EAAiCC,OAAjC,CAAyC,UAAAC,GAAG,EAAI;AAC9CL,cAAAA,CAAC,cAAOK,GAAP,cAAcP,CAAC,CAACK,iBAAF,CAAoBE,GAApB,CAAd,OAAD;AACD,aAFD;AAGA,gBAAIC,GAAG,GAAG,OAAV;AACAN,YAAAA,CAAC,GAAGA,CAAC,CAACO,OAAF,CAAUD,GAAV,EAAe,EAAf,CAAJ;AACA,mBAAO;AACLE,cAAAA,IAAI,EAAET,KAAK,GAAG,CADT;AAELU,cAAAA,KAAK,EAAEX,CAAC,CAACW,KAFJ;AAGLC,cAAAA,SAAS,EAAEV;AAHN,aAAP;AAKD,WAZK;AADS,SAAjB;AAeD,OAhBD,MAgBM;AACJL,QAAAA,cAAc,GAAGZ,IAAI,CAACA,IAAL,CAAUA,IAA3B;AACD;;AACDE,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,wBADC;AAEPM,QAAAA,IAAI,EAAEY,cAFC;AAGPX,QAAAA,OAAO,EAAPA;AAHO,OAAD,CAAR,CAxFY,CA6FZ;AACA;AAEA;AACD,KAtGI,EAuGJ2B,KAvGI,CAuGE,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACI3B,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,wBADC;AAEPK,QAAAA,IAAI,EAAE;AAAEgC,UAAAA,KAAK,EAAEH;AAAT;AAFC,OAAD,CAAR;AAIAhC,MAAAA,OAAO,CAACoC,IAAR,CAAaJ,GAAb;AACL,KA9GI,CAAP;AA+GD,GAvHD;AAwHD;AAED,OAAO,SAASK,sBAAT,GAAkC;AACvC,SAAO;AACL/B,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD;AAED,OAAO,SAASuC,aAAT,GAAyB;AAC9B,MAAMjC,QAAQ,GAAGZ,WAAW,EAA5B;;AAD8B,qBAGiBC,WAAW,CACxD,UAAA6C,KAAK;AAAA,WAAK;AACRC,MAAAA,iBAAiB,EAAED,KAAK,CAACE,IAAN,CAAWD,iBADtB;AAERE,MAAAA,eAAe,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAFpB,KAAL;AAAA,GADmD,EAKxD/C,YALwD,CAH5B;AAAA,MAGtB6C,iBAHsB,gBAGtBA,iBAHsB;AAAA,MAGHE,eAHG,gBAGHA,eAHG;;AAW9B,MAAMC,WAAW,GAAGnD,WAAW,CAC7B,YAAa;AACX,WAAOa,QAAQ,CAACH,UAAU,MAAV,mBAAD,CAAf;AACD,GAH4B,EAI7B,CAACG,QAAD,CAJ6B,CAA/B;AAOA,MAAMuC,iBAAiB,GAAGpD,WAAW,CAAC,YAAM;AAC1C,WAAOa,QAAQ,CAACgC,sBAAsB,EAAvB,CAAf;AACD,GAFoC,EAElC,CAAChC,QAAD,CAFkC,CAArC;AAIA,SAAO;AACLH,IAAAA,UAAU,EAAEyC,WADP;AAELH,IAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,IAAAA,eAAe,EAAfA,eAHK;AAILL,IAAAA,sBAAsB,EAAEO;AAJnB,GAAP;AAMD;;cA5BeN,a;UACG7C,W,EAE8BC,W;;;AA2BjD,OAAO,SAASmD,OAAT,CAAiBN,KAAjB,EAAwBO,MAAxB,EAAgC;AACrC,UAAQA,MAAM,CAACxC,IAAf;AACE,SAAKV,sBAAL;AACE;AAEA,+BACK2C,KADL;AAEEC,QAAAA,iBAAiB,EAAE,IAFrB;AAGEE,QAAAA,eAAe,EAAE,IAHnB;AAIEK,QAAAA,WAAW,EAAE;AAJf;;AAOF,SAAKlD,wBAAL;AACE;AACAoC,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAM,CAAC3C,IAAnB;AAEA,aAAO2C,MAAM,CAAC1C,OAAP,qBAEEmC,KAFF;AAGDC,QAAAA,iBAAiB,EAAE,KAHlB;AAIDE,QAAAA,eAAe,EAAE,IAJhB;AAKDK,QAAAA,WAAW,EAAE,KALZ;AAMDC,QAAAA,SAAS,EAAEF,MAAM,CAAC3C;AANjB,6BASEoC,KATF;AAUDC,QAAAA,iBAAiB,EAAE,KAVlB;AAWDE,QAAAA,eAAe,EAAE,IAXhB;AAYDK,QAAAA,WAAW,EAAE,KAZZ;AAaDE,QAAAA,UAAU,EAAEH,MAAM,CAAC3C;AAblB,QAAP;;AAgBF,SAAKL,wBAAL;AACE;AACA,+BACKyC,KADL;AAEEC,QAAAA,iBAAiB,EAAE,KAFrB;AAGEO,QAAAA,WAAW,EAAE,KAHf;AAIEL,QAAAA,eAAe,EAAEI,MAAM,CAAC3C,IAAP,CAAYgC;AAJ/B;;AAOF,SAAKpC,8BAAL;AACE;AACA,+BACKwC,KADL;AAEEG,QAAAA,eAAe,EAAE;AAFnB;;AAKF;AACE,aAAOH,KAAP;AAhDJ;AAkDD;;;;;;;;;;0BAlNerC,U;0BA2HAmC,sB;0BAMAC,a;0BA8BAO,O","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  HOME_UPLOAD_FILE_BEGIN,\n  HOME_UPLOAD_FILE_SUCCESS,\n  HOME_UPLOAD_FILE_FAILURE,\n  HOME_UPLOAD_FILE_DISMISS_ERROR,\n} from './constants';\nimport {message} from \"antd\";\nimport Axios from 'axios';\n\nexport function uploadFile(data, isConan) {\n  return dispatch => {\n    // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_UPLOAD_FILE_BEGIN,\n    });\n    const uploadUrl = isConan?\"/conan/file\":\"/spine/file\"\n    // Axios.defaults.baseURL = 'https://diagpanel.azurewebsites.net';\n    Axios.defaults.baseURL = 'http://127.0.0.1:8080'\n    return Axios(uploadUrl,{\n      method: 'post',\n      data,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then(data => {\n        // const data = flag\n        //   ? {\n        //       list: [\n        //         {\n        //           version: 'A',\n        //           cluster: 'C-1',\n        //           api: 'API-1-1',\n        //           weight: 50,\n        //           label: 1,\n        //           score: 0.97,\n        //         },\n        //         {\n        //           version: 'A',\n        //           cluster: 'C-1',\n        //           api: 'API-1-1',\n        //           weight: 50,\n        //           label: 1,\n        //           score: 0.96,\n        //         },\n        //         {\n        //           version: 'A',\n        //           cluster: 'C-1',\n        //           api: 'API-1-1',\n        //           weight: 50,\n        //           label: 1,\n        //           score: 0.95,\n        //         },\n        //         {\n        //           version: 'A',\n        //           cluster: 'C-1',\n        //           api: 'API-1-1',\n        //           weight: 50,\n        //           label: 1,\n        //           score: 0.92,\n        //         },\n        //         {\n        //           version: 'A',\n        //           cluster: 'C-1',\n        //           api: 'API-1-1',\n        //           weight: 50,\n        //           label: 1,\n        //           score: 0.98,\n        //         },\n        //       ],\n        //     }\n        //   : {\n        //       parsed_log_file_path: 'mntlogs\\\\2022-03-23\\\\test.csv',\n        //       log_statistics: {\n        //         total_log_size: 10000,\n        //         template_num: 20,\n        //         log_template_mapping: {\n        //           temp_1: 2000,\n        //           temp_2: 500,\n        //           temp_3: 150,\n        //           temp_4: 800,\n        //           temp_5: 1200,\n        //         },\n        //       },\n        //       log_sample_results: {\n        //         Item_1: {\n        //           raw_log: 'receive block 203 from 230.106.70.20',\n        //           log_template: 'receive block * from *',\n        //           parameters: ['203', '230.106.70.20'],\n        //         },\n        //       },\n        //     };\n        if(data.status !== 200) throw new Error();\n        let beautifiedData;\n        if (isConan) {\n          beautifiedData = {\n            list: data.data.data.map((d, index) => {\n              let s = '';\n              Object.keys(d.diagnosis_results).forEach(key => {\n                s += `${key}:${d.diagnosis_results[key]}, `;\n              });\n              var reg = /, $/gi;\n              s = s.replace(reg, '');\n              return {\n                rank: index + 1,\n                score: d.score,\n                rootCause: s,\n              };\n            }),\n          };\n        } else{\n          beautifiedData = data.data.data;\n        }\n        dispatch({\n          type: HOME_UPLOAD_FILE_SUCCESS,\n          data: beautifiedData,\n          isConan,\n        });\n        //})\n        // .catch(err => {\n\n        // })\n      })\n      .catch(err => {\n        console.log(err);\n            dispatch({\n              type: HOME_UPLOAD_FILE_FAILURE,\n              data: { error: err },\n            });\n            message.warn(err)\n      });\n  };\n}\n\nexport function dismissUploadFileError() {\n  return {\n    type: HOME_UPLOAD_FILE_DISMISS_ERROR,\n  };\n}\n\nexport function useUploadFile() {\n  const dispatch = useDispatch();\n\n  const { uploadFilePending, uploadFileError } = useSelector(\n    state => ({\n      uploadFilePending: state.home.uploadFilePending,\n      uploadFileError: state.home.uploadFileError,\n    }),\n    shallowEqual,\n  );\n\n  const boundAction = useCallback(\n    (...args) => {\n      return dispatch(uploadFile(...args));\n    },\n    [dispatch],\n  );\n\n  const boundDismissError = useCallback(() => {\n    return dispatch(dismissUploadFileError());\n  }, [dispatch]);\n\n  return {\n    uploadFile: boundAction,\n    uploadFilePending,\n    uploadFileError,\n    dismissUploadFileError: boundDismissError,\n  };\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_UPLOAD_FILE_BEGIN:\n      // Just after a request is sent\n\n      return {\n        ...state,\n        uploadFilePending: true,\n        uploadFileError: null,\n        isUploading: true,\n      };\n\n    case HOME_UPLOAD_FILE_SUCCESS:\n      // The request is success\n      console.log(action.data);\n\n      return action.isConan\n        ? {\n            ...state,\n            uploadFilePending: false,\n            uploadFileError: null,\n            isUploading: false,\n            conanData: action.data,\n          }\n        : {\n            ...state,\n            uploadFilePending: false,\n            uploadFileError: null,\n            isUploading: false,\n            parsedData: action.data,\n          };\n\n    case HOME_UPLOAD_FILE_FAILURE:\n      // The request is failed\n      return {\n        ...state,\n        uploadFilePending: false,\n        isUploading: false,\n        uploadFileError: action.data.error,\n      };\n\n    case HOME_UPLOAD_FILE_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return {\n        ...state,\n        uploadFileError: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}