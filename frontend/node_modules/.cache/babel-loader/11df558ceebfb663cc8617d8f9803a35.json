{"ast":null,"code":"import _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport function isAsyncLike(obj) {\n  return typeof obj === 'object' && obj.then && typeof obj.then === 'function';\n}\nexport function isAsync(obj) {\n  return obj != null && (obj instanceof Promise || isAsyncLike(obj));\n}\nexport function toAsyncBoolean() {\n  var results = [];\n\n  for (var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++) {\n    inputs[_key] = arguments[_key];\n  }\n\n  inputs.forEach(function (arg) {\n    if (Array.isArray(arg)) {\n      results.push.apply(results, _toConsumableArray(arg));\n    } else {\n      results.push(arg);\n    }\n  });\n  var hasAsync = results.some(function (res) {\n    return isAsync(res);\n  });\n\n  if (hasAsync) {\n    var deferres = results.map(function (res) {\n      return isAsync(res) ? res : Promise.resolve(res !== false);\n    });\n    return Promise.all(deferres).then(function (arr) {\n      return arr.reduce(function (memo, item) {\n        return item !== false && memo;\n      }, true);\n    });\n  }\n\n  return results.every(function (res) {\n    return res !== false;\n  });\n}\nexport function toDeferredBoolean() {\n  for (var _len2 = arguments.length, inputs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    inputs[_key2] = arguments[_key2];\n  }\n\n  var ret = toAsyncBoolean(inputs);\n  return typeof ret === 'boolean' ? Promise.resolve(ret) : ret;\n}","map":null,"metadata":{},"sourceType":"module"}