{"ast":null,"code":"export var Interp;\n\n(function (Interp) {\n  Interp.number = function (a, b) {\n    var d = b - a;\n    return function (t) {\n      return a + d * t;\n    };\n  };\n\n  Interp.object = function (a, b) {\n    var keys = Object.keys(a);\n    return function (t) {\n      var ret = {};\n\n      for (var i = keys.length - 1; i !== -1; i -= 1) {\n        var key = keys[i];\n        ret[key] = a[key] + (b[key] - a[key]) * t;\n      }\n\n      return ret;\n    };\n  };\n\n  Interp.unit = function (a, b) {\n    var reg = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/;\n    var ma = reg.exec(a);\n    var mb = reg.exec(b);\n    var pb = mb ? mb[1] : '';\n    var aa = ma ? +ma[1] : 0;\n    var bb = mb ? +mb[1] : 0;\n    var index = pb.indexOf('.');\n    var precision = index > 0 ? pb[1].length - index - 1 : 0;\n    var d = bb - aa;\n    var u = ma ? ma[2] : '';\n    return function (t) {\n      return (aa + d * t).toFixed(precision) + u;\n    };\n  };\n\n  Interp.color = function (a, b) {\n    var ca = parseInt(a.slice(1), 16);\n    var cb = parseInt(b.slice(1), 16);\n    var ra = ca & 0x0000ff;\n    var rd = (cb & 0x0000ff) - ra;\n    var ga = ca & 0x00ff00;\n    var gd = (cb & 0x00ff00) - ga;\n    var ba = ca & 0xff0000;\n    var bd = (cb & 0xff0000) - ba;\n    return function (t) {\n      var r = ra + rd * t & 0x000000ff;\n      var g = ga + gd * t & 0x0000ff00;\n      var b = ba + bd * t & 0x00ff0000;\n      return \"#\".concat((1 << 24 | r | g | b).toString(16).slice(1));\n    };\n  };\n})(Interp || (Interp = {}));","map":null,"metadata":{},"sourceType":"module"}