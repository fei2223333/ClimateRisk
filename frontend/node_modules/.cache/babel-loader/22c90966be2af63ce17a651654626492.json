{"ast":null,"code":"import _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nvar viewName = getName('text');\nexport var Text = /*#__PURE__*/function (_createShape) {\n  _inherits(Text, _createShape);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Text).apply(this, arguments));\n  }\n\n  return Text;\n}(createShape('text', {\n  view: viewName,\n  attrs: {\n    text: {\n      fontSize: 18,\n      fill: '#000000',\n      stroke: null,\n      refX: 0.5,\n      refY: 0.5\n    }\n  }\n}, {\n  noText: true\n}));\n\n(function (Text) {\n  var View = /*#__PURE__*/function (_NodeView) {\n    _inherits(View, _NodeView);\n\n    function View() {\n      _classCallCheck(this, View);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(View).apply(this, arguments));\n    }\n\n    _createClass(View, [{\n      key: \"confirmUpdate\",\n      value: function confirmUpdate(flag) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        var ret = _get(_getPrototypeOf(View.prototype), \"confirmUpdate\", this).call(this, flag, options);\n\n        if (this.hasAction(ret, 'scale')) {\n          this.resize();\n          ret = this.removeAction(ret, 'scale');\n        }\n\n        return ret;\n      }\n    }]);\n\n    return View;\n  }(NodeView);\n\n  Text.View = View;\n  View.config({\n    actions: {\n      attrs: ['scale']\n    }\n  });\n  NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));","map":null,"metadata":{},"sourceType":"module"}