{"ast":null,"code":"import React from 'react';\nimport { DatabaseOutlined, RedoOutlined, CloseCircleOutlined, CheckCircleOutlined, ExclamationCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\nvar fontStyle = {\n  fontSize: '16px',\n  color: '#3057e3'\n};\n/** 状态 类型 */\n\nexport var StatusEnum;\n\n(function (StatusEnum) {\n  StatusEnum[\"SUCCESS\"] = \"success\";\n  StatusEnum[\"PROCESSING\"] = \"processing\";\n  StatusEnum[\"ERROR\"] = \"error\";\n  StatusEnum[\"DEFAULT\"] = \"default\";\n  StatusEnum[\"WARNING\"] = \"warning\";\n})(StatusEnum || (StatusEnum = {}));\n\nexport var AlgoIcon = function AlgoIcon(props) {\n  if (props.hide) {\n    return null;\n  }\n\n  switch (props.status) {\n    case StatusEnum.PROCESSING:\n      return React.createElement(RedoOutlined, {\n        spin: true,\n        style: {\n          color: '#c1cdf7',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.ERROR:\n      return React.createElement(CloseCircleOutlined, {\n        style: {\n          color: '#ff4d4f',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.SUCCESS:\n      return React.createElement(CheckCircleOutlined, {\n        style: {\n          color: '#39ca74cc',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.WARNING:\n      return React.createElement(ExclamationCircleOutlined, {\n        style: {\n          color: '#faad14',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.DEFAULT:\n      return React.createElement(InfoCircleOutlined, {\n        style: {\n          color: '#d9d9d9',\n          fontSize: '16px'\n        }\n      });\n\n    default:\n      return null;\n  }\n};\nexport var XFlowDefaultNode = function XFlowDefaultNode(props) {\n  var icon = React.isValidElement(props.data.icon) ? props.data.icon : React.createElement(DatabaseOutlined, {\n    style: fontStyle\n  });\n  return React.createElement(\"div\", {\n    className: \"xflow-default-node \".concat(props.isNodeTreePanel ? 'panel-node' : '')\n  }, React.createElement(\"span\", {\n    className: \"icon\"\n  }, icon), React.createElement(\"span\", {\n    className: \"label\"\n  }, props.data.label), React.createElement(\"span\", {\n    className: \"status\"\n  }, React.createElement(AlgoIcon, {\n    status: props.data && props.data.status,\n    hide: props.isNodeTreePanel\n  })));\n};\nXFlowDefaultNode.displayName = 'XFlowDefaultNode';","map":null,"metadata":{},"sourceType":"module"}