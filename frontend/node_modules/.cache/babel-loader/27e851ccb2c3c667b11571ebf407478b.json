{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { createDagExtensionModule } from '../module';\nimport { useExtensionRegistry, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nexport var DagGraphExtension = function DagGraphExtension(props) {\n  /** 获取扩展Registry */\n  var extensionRegistry = useExtensionRegistry();\n  React.useEffect(function () {\n    /** 添加 container的classname */\n    extensionRegistry.addContainerClassNames('dag-extension-container');\n    var layout = props.layout || 'TB';\n    extensionRegistry.addContainerClassNames(layout === 'TB' ? 'layout-top-bottom' : 'layout-left-right');\n  }, [extensionRegistry, props.layout]);\n  var config = React.useMemo(function () {\n    return {\n      CONFIG_TYPE: 'DAG_EXTENSION',\n      getConfig: function getConfig() {\n        return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", props);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      }\n    };\n  }, [props]);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    config: config,\n    createModule: createDagExtensionModule\n  });\n};","map":null,"metadata":{},"sourceType":"module"}