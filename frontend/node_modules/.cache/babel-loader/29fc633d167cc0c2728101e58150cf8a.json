{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\nimport { IMinimapConfigProvider } from '../interface';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\nvar HookContribution = function HookContribution() {\n  var _this = this;\n\n  _classCallCheck(this, HookContribution);\n\n  this.toDispose = new DisposableCollection();\n\n  this.registerHookHub = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this2 = this;\n\n      var toDispose, disposables;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              toDispose = new DisposableCollection();\n              disposables = [hooks.graphOptions.registerHook({\n                name: 'add minimap options',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var minimapOptions;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return this.minimapConfig.getConfig();\n\n                          case 2:\n                            minimapOptions = _context2.sent;\n                            args.minimap = Object.assign({}, minimapOptions);\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }\n              })];\n              toDispose.pushAll(disposables);\n              return _context3.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n  };\n};\n\n__decorate([ManaSyringe.inject(IMinimapConfigProvider), __metadata(\"design:type\", Object)], HookContribution.prototype, \"minimapConfig\", void 0);\n\nHookContribution = __decorate([ManaSyringe.singleton({\n  contrib: IHookContribution\n})], HookContribution);\nexport { HookContribution };","map":null,"metadata":{},"sourceType":"module"}