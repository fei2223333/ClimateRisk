{"ast":null,"code":"import _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { JsonSchemaForm } from '../canvas-json-schema-form';\nimport { WorkspacePanel } from '../base-panel';\nimport { defaultFormSchemaService } from './form-schema-service';\nimport { defaultControlMapService } from './control-map-service';\nexport var CONTAINER_CLASS = 'xflow-editor-panel-collpase';\nexport var FlowchartFormPanel = function FlowchartFormPanel(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      collpased = _useState2[0],\n      setCollpased = _useState2[1];\n\n  var _props$controlMapServ = props.controlMapService,\n      controlMapService = _props$controlMapServ === void 0 ? defaultControlMapService : _props$controlMapServ,\n      _props$formSchemaServ = props.formSchemaService,\n      formSchemaService = _props$formSchemaServ === void 0 ? defaultFormSchemaService : _props$formSchemaServ,\n      _props$position = props.position,\n      position = _props$position === void 0 ? {\n    width: 240,\n    top: 0,\n    bottom: 0,\n    right: 0\n  } : _props$position,\n      _props$show = props.show,\n      show = _props$show === void 0 ? true : _props$show,\n      rest = __rest(props, [\"controlMapService\", \"formSchemaService\", \"position\", \"show\"]);\n\n  if (!show) {\n    return null;\n  }\n\n  var _position$width = position.width,\n      width = _position$width === void 0 ? 200 : _position$width,\n      right = position.right;\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: Object.assign(Object.assign({}, position), {\n      right: !collpased ? right : -width\n    })\n  }, React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-wrapper\")\n  }, React.createElement(JsonSchemaForm, Object.assign({\n    targetType: ['node', 'edge', 'canvas', 'group'],\n    controlMapService: controlMapService,\n    formSchemaService: formSchemaService,\n    position: Object.assign(Object.assign({}, position), {\n      top: 0\n    }),\n    prefixClz: \"xflow-form-editor\"\n  }, rest)), React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-icon\"),\n    style: {\n      top: 21,\n      left: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '50% 0 0  50%',\n      borderRight: !collpased ? '' : 'none'\n    },\n    onClick: function onClick() {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleLeftOutlined, null) : React.createElement(DoubleRightOutlined, null))));\n};","map":null,"metadata":{},"sourceType":"module"}