{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { RxModel, NsModel } from './rx-model';\n/** 判断model是否Mount */\n\nvar isRefMounted = function isRefMounted(ref) {\n  return ref && ref.current;\n};\n/** 用于判断model是否Mount */\n\n\nexport var useIsMountedRef = function useIsMountedRef() {\n  /** 记录当前组件的加载状态 */\n  var ref = React.useRef(true);\n  React.useEffect(function () {\n    return function () {\n      ref.current = false;\n    };\n  }, []);\n  return ref;\n};\n/** 判断model是否Mount */\n\nexport var useModel = function useModel(model) {\n  /** 记录当前组件的加载状态 */\n  var ref = useIsMountedRef();\n\n  var _React$useState = React.useState(model.getValue()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    var disposeable = model.watch(function (val) {\n      if (isRefMounted(ref)) {\n        setState(val);\n      }\n    });\n    return function () {\n      disposeable.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, [setState]);\n  var value = state;\n  var canRender = NsModel.isValidValue(value);\n  var setValue = React.useCallback(function (val) {\n    return model.setValue(val);\n  }, [model]);\n  return [value, setValue, canRender];\n};\n/** 在组件内部新建一个model */\n\nexport var createComponentModel = function createComponentModel(initialState) {\n  /* eslint-disable-next-line  */\n  var model = React.useMemo(function () {\n    return new RxModel(initialState);\n  }, []);\n  /** model 和 state 绑定触发view刷新 */\n\n  /* eslint-disable-next-line  */\n\n  var _useModel = useModel(model),\n      _useModel2 = _slicedToArray(_useModel, 3),\n      modelValue = _useModel2[0],\n      setModelValue = _useModel2[1],\n      canRender = _useModel2[2];\n  /** unMount时dispose */\n\n  /* eslint-disable-next-line  */\n\n\n  React.useEffect(function () {\n    return function () {\n      model.dispose();\n    };\n  }, [model]);\n  return [modelValue, setModelValue, model, canRender];\n};\n/**\n * useModelAsync：\n * watch model的值，\n * 把model的值通过useState和组件状态关联起来\n */\n\nexport var useModelAsync = function useModelAsync(args) {\n  var getModel = args.getModel,\n      initialState = args.initialState;\n  /** 记录当前组件的加载状态 */\n\n  var isMountedRef = useIsMountedRef();\n  var modelRef = React.useRef();\n  /** 订阅 model */\n\n  var _React$useState3 = React.useState(initialState),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  React.useEffect(function () {\n    var d;\n    getModel().then(function (model) {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var newState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                modelRef.current = model;\n                _context.next = 3;\n                return model.getValidValue();\n\n              case 3:\n                newState = _context.sent;\n\n                if (isMountedRef.current) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                setState(newState);\n                d = model.watch(function (val) {\n                  if (isMountedRef.current) {\n                    setState(val);\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    });\n    return function () {\n      if (d && d.dispose) {\n        d.dispose();\n      }\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return [state, setState, modelRef.current];\n};","map":null,"metadata":{},"sourceType":"module"}