{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFuncByUnknownType = exports.getFunc = exports.isFunction = void 0;\n\nvar _1 = require(\".\");\n\nvar number_1 = require(\"./number\");\n\nvar isFunction = function isFunction(val) {\n  return typeof val === 'function';\n};\n\nexports.isFunction = isFunction;\n\nvar getFunc = function getFunc(value, defaultValue, func) {\n  var resultFunc;\n\n  if (func) {\n    resultFunc = func;\n  } else if ((0, number_1.isNumber)(value)) {\n    resultFunc = function resultFunc() {\n      return value;\n    };\n  } else {\n    resultFunc = function resultFunc() {\n      return defaultValue;\n    };\n  }\n\n  return resultFunc;\n};\n\nexports.getFunc = getFunc;\n\nvar getFuncByUnknownType = function getFuncByUnknownType(defaultValue, value, resultIsNumber) {\n  if (resultIsNumber === void 0) {\n    resultIsNumber = true;\n  }\n\n  if (!value && value !== 0) {\n    return function (d) {\n      if (d.size) {\n        if ((0, _1.isArray)(d.size)) return d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n        if ((0, _1.isObject)(d.size)) return d.size.width > d.size.height ? d.size.width : d.size.height;\n        return d.size;\n      }\n\n      return defaultValue;\n    };\n  }\n\n  if ((0, exports.isFunction)(value)) {\n    return value;\n  }\n\n  if ((0, number_1.isNumber)(value)) {\n    return function () {\n      return value;\n    };\n  }\n\n  if ((0, _1.isArray)(value)) {\n    return function () {\n      if (resultIsNumber) {\n        var max = Math.max.apply(Math, value);\n        return isNaN(max) ? defaultValue : max;\n      }\n\n      return value;\n    };\n  }\n\n  if ((0, _1.isObject)(value)) {\n    return function () {\n      if (resultIsNumber) {\n        var max = Math.max(value.width, value.height);\n        return isNaN(max) ? defaultValue : max;\n      }\n\n      return [value.width, value.height];\n    };\n  }\n\n  return function () {\n    return defaultValue;\n  };\n};\n\nexports.getFuncByUnknownType = getFuncByUnknownType;","map":null,"metadata":{},"sourceType":"script"}