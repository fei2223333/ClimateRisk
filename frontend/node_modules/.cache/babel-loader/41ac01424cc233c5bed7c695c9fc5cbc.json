{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphCommandService } from '../../command/interface';\nimport { COMMAND_REDOABLE, COMMAND_UNDOABLE, COMMAND_GLOBALS } from '../constant';\nimport { IModelContribution } from '../interface';\n\nvar CommandModelContribution = /*#__PURE__*/function () {\n  function CommandModelContribution() {\n    _classCallCheck(this, CommandModelContribution);\n  }\n\n  _createClass(CommandModelContribution, [{\n    key: \"registerModel\",\n\n    /** 扩展Model */\n    value: function registerModel(registry) {\n      var _this = this;\n\n      /** 是否可以redo */\n      registry.registerModel({\n        id: COMMAND_REDOABLE.id,\n        getInitialValue: function getInitialValue() {\n          return _this.commands.isRedoable;\n        },\n        watchChange: function watchChange(model) {\n          return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var _this2 = this;\n\n            var disposable;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    disposable = this.commands.watchChange(function () {\n                      model.setValue(_this2.commands.isRedoable);\n                    });\n                    return _context.abrupt(\"return\", disposable);\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n        }\n      });\n      /** 是否可以undo */\n\n      registry.registerModel({\n        id: COMMAND_UNDOABLE.id,\n        getInitialValue: function getInitialValue() {\n          return _this.commands.isUndoable;\n        },\n        watchChange: function watchChange(model) {\n          return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var _this3 = this;\n\n            var disposable;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    disposable = this.commands.watchChange(function () {\n                      model.setValue(_this3.commands.isUndoable);\n                    });\n                    return _context2.abrupt(\"return\", disposable);\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n        }\n      });\n      /** command 执行结果 */\n\n      registry.registerModel({\n        id: COMMAND_GLOBALS.id,\n        modelFactory: function modelFactory() {\n          return _this.commands.Globals;\n        }\n      });\n    }\n  }]);\n\n  return CommandModelContribution;\n}();\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], CommandModelContribution.prototype, \"commands\", void 0);\n\nCommandModelContribution = __decorate([singleton({\n  contrib: IModelContribution\n})], CommandModelContribution);\nexport { CommandModelContribution };","map":null,"metadata":{},"sourceType":"module"}