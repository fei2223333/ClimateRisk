{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { HOME_POST_CENSUS_TRACT_FILTER_BEGIN, HOME_POST_CENSUS_TRACT_FILTER_SUCCESS, HOME_POST_CENSUS_TRACT_FILTER_FAILURE, HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR } from './constants';\nexport function postCensusTractFilter() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch) {\n    // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_POST_CENSUS_TRACT_FILTER_BEGIN\n    });\n    var promise = new Promise(function (resolve, reject) {\n      var doRequest = args.error ? Promise.reject(new Error()) : Promise.resolve();\n      doRequest.then(function (res) {\n        dispatch({\n          type: HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n          data: res\n        });\n        resolve(res);\n      }, // Use rejectHandler as the second argument so that render errors won't be caught.\n      function (err) {\n        dispatch({\n          type: HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n          data: {\n            error: err\n          }\n        });\n        reject(err);\n      });\n    });\n    return promise;\n  };\n}\nexport function dismissPostCensusTractFilterError() {\n  return {\n    type: HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR\n  };\n}\nexport function usePostCensusTractFilter() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postCensusTractFilterPending: state.home.postCensusTractFilterPending,\n      postCensusTractFilterError: state.home.postCensusTractFilterError\n    };\n  }, shallowEqual),\n      postCensusTractFilterPending = _useSelector.postCensusTractFilterPending,\n      postCensusTractFilterError = _useSelector.postCensusTractFilterError;\n\n  var boundAction = useCallback(function () {\n    return dispatch(postCensusTractFilter.apply(void 0, arguments));\n  }, [dispatch]);\n  var boundDismissError = useCallback(function () {\n    return dispatch(dismissPostCensusTractFilterError());\n  }, [dispatch]);\n  return {\n    postCensusTractFilter: boundAction,\n    postCensusTractFilterPending: postCensusTractFilterPending,\n    postCensusTractFilterError: postCensusTractFilterError,\n    dismissPostCensusTractFilterError: boundDismissError\n  };\n}\n\n__signature__(usePostCensusTractFilter, \"useDispatch{dispatch}\\nuseSelector{{ postCensusTractFilterPending, postCensusTractFilterError }}\\nuseCallback{boundAction}\\nuseCallback{boundDismissError}\", function () {\n  return [useDispatch, useSelector];\n});\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_POST_CENSUS_TRACT_FILTER_BEGIN:\n      // Just after a request is sent\n      return _objectSpread({}, state, {\n        postCensusTractFilterPending: true,\n        postCensusTractFilterError: null\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_SUCCESS:\n      // The request is success\n      return _objectSpread({}, state, {\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: null\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_FAILURE:\n      // The request is failed\n      return _objectSpread({}, state, {\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: action.data.error\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return _objectSpread({}, state, {\n        postCensusTractFilterError: null\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(postCensusTractFilter, \"postCensusTractFilter\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(dismissPostCensusTractFilterError, \"dismissPostCensusTractFilterError\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(usePostCensusTractFilter, \"usePostCensusTractFilter\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js"],"names":["useEffect","useCallback","useDispatch","useSelector","shallowEqual","HOME_POST_CENSUS_TRACT_FILTER_BEGIN","HOME_POST_CENSUS_TRACT_FILTER_SUCCESS","HOME_POST_CENSUS_TRACT_FILTER_FAILURE","HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR","postCensusTractFilter","args","dispatch","type","promise","Promise","resolve","reject","doRequest","error","Error","then","res","data","err","dismissPostCensusTractFilterError","usePostCensusTractFilter","state","postCensusTractFilterPending","home","postCensusTractFilterError","boundAction","boundDismissError","reducer","action"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  HOME_POST_CENSUS_TRACT_FILTER_BEGIN,\n  HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n  HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n  HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR,\n} from './constants';\n\nexport function postCensusTractFilter(args = {}) {\n  return (dispatch) => { // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_POST_CENSUS_TRACT_FILTER_BEGIN,\n    });\n\n    const promise = new Promise((resolve, reject) => {\n      const doRequest = args.error ? Promise.reject(new Error()) : Promise.resolve();\n      doRequest.then(\n        (res) => {\n          dispatch({\n            type: HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n            data: res,\n          });\n          resolve(res);\n        },\n        // Use rejectHandler as the second argument so that render errors won't be caught.\n        (err) => {\n          dispatch({\n            type: HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n            data: { error: err },\n          });\n          reject(err);\n        },\n      );\n    });\n\n    return promise;\n  };\n}\n\nexport function dismissPostCensusTractFilterError() {\n  return {\n    type: HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR,\n  };\n}\n\nexport function usePostCensusTractFilter() {\n  const dispatch = useDispatch();\n\n  const { postCensusTractFilterPending, postCensusTractFilterError } = useSelector(\n    state => ({\n      postCensusTractFilterPending: state.home.postCensusTractFilterPending,\n      postCensusTractFilterError: state.home.postCensusTractFilterError,\n    }),\n    shallowEqual,\n  );\n\n  const boundAction = useCallback((...args) => {\n    return dispatch(postCensusTractFilter(...args));\n  }, [dispatch]);\n\n  const boundDismissError = useCallback(() => {\n    return dispatch(dismissPostCensusTractFilterError());\n  }, [dispatch]);\n\n  return {\n    postCensusTractFilter: boundAction,\n    postCensusTractFilterPending,\n    postCensusTractFilterError,\n    dismissPostCensusTractFilterError: boundDismissError,\n  };\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_POST_CENSUS_TRACT_FILTER_BEGIN:\n      // Just after a request is sent\n      return {\n        ...state,\n        postCensusTractFilterPending: true,\n        postCensusTractFilterError: null,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_SUCCESS:\n      // The request is success\n      return {\n        ...state,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: null,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_FAILURE:\n      // The request is failed\n      return {\n        ...state,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: action.data.error,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return {\n        ...state,\n        postCensusTractFilterError: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}