{"ast":null,"code":"import _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useRef, memo } from 'react';\nimport { render, createPortal } from 'react-dom';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { Button } from 'antd';\nimport { SketchPicker } from 'react-color';\nimport { PREFIX } from '../constants';\n\nvar ColorPicker = function ColorPicker(props) {\n  var label = props.label,\n      _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      onChange = props.onChange;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var colorRef = useRef(value);\n\n  var _useXFlowApp = useXFlowApp(),\n      graphProvider = _useXFlowApp.graphProvider;\n\n  var graphConfig = useRef();\n  graphProvider.getGraphOptions().then(function (x6GraphConfig) {\n    graphConfig.current = x6GraphConfig;\n  });\n\n  var PickContainer = function PickContainer() {\n    return React.createElement(\"div\", {\n      className: \"\".concat(PREFIX, \"-pick-color-container\")\n    }, React.createElement(\"div\", {\n      className: \"\".concat(PREFIX, \"-popover\")\n    }, React.createElement(SketchPicker, {\n      onChange: function onChange(color) {\n        colorRef.current = color.hex;\n      }\n    }), React.createElement(\"div\", {\n      className: \"foolter\"\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        setShow(false);\n      }\n    }, \"\\u53D6\\u6D88\"), React.createElement(Button, {\n      type: \"primary\",\n      onClick: function onClick() {\n        onChange === null || onChange === void 0 ? void 0 : onChange(colorRef.current);\n        setShow(false);\n      }\n    }, \"\\u786E\\u8BA4\"))));\n  };\n\n  var createPickColorContainer = function createPickColorContainer(visible) {\n    var existElements = document.getElementsByClassName(\"\".concat(PREFIX, \"-pick-color-container\"));\n\n    if (existElements.length) {\n      Array.from(existElements).forEach(function (ele) {\n        var _a;\n\n        (_a = ele.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(ele);\n      });\n    }\n\n    if (!visible) {\n      return;\n    }\n\n    var div = document.createElement('div');\n    render(createPortal(React.createElement(PickContainer, null), document.getElementsByTagName('body')[0]), div);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"group\"\n  }, label && React.createElement(\"label\", null, label), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-color-container\"),\n    onClick: function onClick() {\n      setShow(true);\n    }\n  }, React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-color\"),\n    style: {\n      backgroundColor: value,\n      height: '100%'\n    }\n  })), createPickColorContainer(show));\n};\n\nexport default memo(ColorPicker, function (pre, next) {\n  return pre.label === next.label && pre.value === next.value;\n});","map":null,"metadata":{},"sourceType":"module"}