{"ast":null,"code":"import { bbox } from './bbox';\nimport { offset, getStrokeWidth } from './util';\nimport { FunctionExt } from '../../util';\n/**\n * Places the connection point at the intersection between the\n * link path end segment and the element's unrotated bbox.\n */\n\nexport var rect = function rect(line, view, magnet, options, type) {\n  var cell = view.cell;\n  var angle = cell.isNode() ? cell.getAngle() : 0;\n\n  if (angle === 0) {\n    return FunctionExt.call(bbox, this, line, view, magnet, options, type);\n  }\n\n  var bboxRaw = view.getUnrotatedBBoxOfElement(magnet);\n\n  if (options.stroked) {\n    bboxRaw.inflate(getStrokeWidth(magnet) / 2);\n  }\n\n  var center = bboxRaw.getCenter();\n  var lineRaw = line.clone().rotate(angle, center);\n  var intersections = lineRaw.setLength(1e6).intersect(bboxRaw);\n  var p = intersections && intersections.length ? lineRaw.start.closest(intersections).rotate(-angle, center) : line.end;\n  return offset(p, line.start, options.offset);\n};","map":null,"metadata":{},"sourceType":"module"}