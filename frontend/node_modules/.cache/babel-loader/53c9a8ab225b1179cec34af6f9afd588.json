{"ast":null,"code":"import _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport { Input } from 'antd';\nimport { usePanelContext } from '../base-panel/context';\nexport var NodePanelHeader = function NodePanelHeader(props) {\n  var prefixClz = props.prefixClz,\n      onKeywordChange = props.onKeywordChange,\n      state = props.state;\n\n  var _usePanelContext = usePanelContext(),\n      propsProxy = _usePanelContext.propsProxy;\n\n  var panelProps = propsProxy.getValue();\n\n  var _onChange = function onChange(e) {\n    var panelNodes = state.collapseData.reduce(function (acc, item) {\n      if (item.children) {\n        acc.push.apply(acc, _toConsumableArray(item.children));\n      }\n\n      return acc;\n    }, []);\n    onKeywordChange(e.target.value, panelNodes);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-header\"),\n    style: props.style\n  }, panelProps.header && React.isValidElement(panelProps.header) && panelProps.header, panelProps.searchService && React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-header-search\")\n  }, React.createElement(Input, {\n    placeholder: \"\\u641C\\u7D22\\u7EC4\\u4EF6\",\n    allowClear: true,\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    style: {\n      width: '100%',\n      border: 0\n    }\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}