{"ast":null,"code":"export var noop = function noop() {\n  return null;\n};\nexport var disposableNoop = {\n  dispose: noop\n};\nexport function debounce(cb, time) {\n  var flag;\n  return function () {\n    clearTimeout(flag);\n    flag = window.setTimeout(cb, time);\n  };\n}\nexport function throttle(cb) {\n  var flag;\n  return function () {\n    if (!flag) {\n      flag = requestAnimationFrame(function () {\n        flag = null;\n        cb();\n      });\n    }\n  };\n}\nexport var insertCss = function insertCss(cssString) {\n  var $style = document.createElement('style');\n  $style.setAttribute('type', 'text/css');\n  document.head.appendChild($style); // This is required for IE8 and below.\n  // @ts-ignore\n\n  if ($style.styleSheet) {\n    // @ts-ignore\n    $style.styleSheet.cssText = cssString;\n  } else {\n    $style.appendChild(document.createTextNode(cssString));\n  }\n\n  return $style;\n}; // refer:https://stackoverflow.com/questions/33199959/how-to-detect-a-react-component-vs-a-react-element\n\nexport function isClassComponent(component) {\n  return typeof component === 'function' && !!component.prototype.isReactComponent;\n}\nexport function isFunctionComponent(component) {\n  return typeof component === 'function' && String(component).includes('return React.createElement');\n}\nexport function isReactComponent(component) {\n  return isClassComponent(component) || isFunctionComponent(component);\n}","map":null,"metadata":{},"sourceType":"module"}