{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Node } from '../model/node';\nimport { ObjectExt } from '../util';\nexport var Base = /*#__PURE__*/function (_Node) {\n  _inherits(Base, _Node);\n\n  function Base() {\n    _classCallCheck(this, Base);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Base).apply(this, arguments));\n  }\n\n  _createClass(Base, [{\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.getAttrByPath('text/text');\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label, options) {\n      if (label == null) {\n        this.removeLabel();\n      } else {\n        this.setAttrByPath('text/text', label, options);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeLabel\",\n    value: function removeLabel() {\n      this.removeAttrByPath('text/text');\n      return this;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this.getLabel();\n    },\n    set: function set(val) {\n      this.setLabel(val);\n    }\n  }]);\n\n  return Base;\n}(Node);\n\n(function (Base) {\n  Base.bodyAttr = {\n    fill: '#ffffff',\n    stroke: '#333333',\n    strokeWidth: 2\n  };\n  Base.labelAttr = {\n    fontSize: 14,\n    fill: '#000000',\n    refX: 0.5,\n    refY: 0.5,\n    textAnchor: 'middle',\n    textVerticalAnchor: 'middle',\n    fontFamily: 'Arial, helvetica, sans-serif'\n  };\n  Base.config({\n    attrs: {\n      text: Object.assign({}, Base.labelAttr)\n    },\n    propHooks: function propHooks(metadata) {\n      var label = metadata.label,\n          others = __rest(metadata, [\"label\"]);\n\n      if (label) {\n        ObjectExt.setByPath(others, 'attrs/text/text', label);\n      }\n\n      return others;\n    }\n  });\n})(Base || (Base = {}));","map":null,"metadata":{},"sourceType":"module"}