{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nimport 'reflect-metadata';\n/** Toolbar扩展点依赖 */\n\nimport { KeyBindingRegistry } from './keybinding-registry';\nimport { IKeyBindingContribution, IKeyBindingOptionProvider } from './interface';\nimport { Contribution, Module, Syringe } from 'mana-syringe';\nexport var registerKeybindingConfig = function registerKeybindingConfig(register, config) {\n  register(IKeyBindingOptionProvider, {\n    useDynamic: function useDynamic() {\n      return {\n        getOption: function getOption() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", config.getConfig());\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      };\n    },\n    lifecycle: Syringe.Lifecycle.singleton\n  });\n};\n/** 依赖扩展模块，必须要加载 */\n\nexport var createModule = function createModule(keyBindingConfig) {\n  return Module(function (register) {\n    /** 绑定 context 配置 */\n    registerKeybindingConfig(register, keyBindingConfig);\n    /** 注册 IContextContribution */\n\n    Contribution.register(register, IKeyBindingContribution);\n    /** 注册 KeyBindingRegistry 到 IFrontendApplicationContribution  */\n\n    /** 注册 KeyBindingRegistry */\n\n    /** 注册 KeyBindingRegistry alias  IKeybindingService */\n\n    register(KeyBindingRegistry);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}