{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n\n(function (NsGraphSaveData) {\n  /** Command Id: 用于注册named factory */\n  NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n  /** hookName */\n\n  NsGraphSaveData.hookKey = 'saveGrpahData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\n\nvar GraphSaveDataCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function GraphSaveDataCommand() {\n    var _this = this;\n\n    _classCallCheck(this, GraphSaveDataCommand);\n\n    /** 执行Cmd */\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var ctx, args, hooks;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = this.ctx;\n                args = ctx.getArgs();\n                hooks = ctx.getHooks();\n                /** 执行hooks */\n\n                _context2.next = 5;\n                return hooks.saveGrpahData.call(\n                /** 执行hooks pipeline处理args */\n                args.args,\n                /** 执行 callback */\n                function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var saveGraphDataService, includeAttrs, x6Graph, x6Nodes, x6Edges, nodes, edges, graphData, graphMeta, result;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            saveGraphDataService = handlerArgs.saveGraphDataService, includeAttrs = handlerArgs.includeAttrs;\n                            _context.next = 3;\n                            return ctx.getX6Graph();\n\n                          case 3:\n                            x6Graph = _context.sent;\n                            x6Nodes = x6Graph.getNodes();\n                            x6Edges = x6Graph.getEdges();\n                            nodes = x6Nodes.map(function (node) {\n                              var data = node.getData();\n                              var position = node.position();\n                              var size = node.size();\n                              var model = Object.assign(Object.assign(Object.assign({\n                                id: node.id\n                              }, data), position), size);\n\n                              if (includeAttrs) {\n                                model.attrs = node.getAttrs();\n                              }\n\n                              return model;\n                            });\n                            edges = x6Edges.map(function (edge) {\n                              var data = edge.getData();\n                              var model = Object.assign({\n                                id: edge.id\n                              }, data);\n\n                              if (includeAttrs) {\n                                model.attrs = edge.getAttrs();\n                              }\n\n                              return model;\n                            });\n                            graphData = {\n                              nodes: nodes,\n                              edges: edges\n                            };\n                            _context.next = 11;\n                            return this.ctx.getGraphMeta();\n\n                          case 11:\n                            graphMeta = _context.sent;\n\n                            if (!saveGraphDataService) {\n                              _context.next = 17;\n                              break;\n                            }\n\n                            _context.next = 15;\n                            return saveGraphDataService(graphMeta, graphData);\n\n                          case 15:\n                            result = _context.sent;\n\n                            /** 设置结果 */\n                            if (result) {\n                              this.ctx.setResult(result);\n                            }\n\n                          case 17:\n                            return _context.abrupt(\"return\", {});\n\n                          case 18:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                },\n                /** 外部的 hook */\n                args.hooks);\n\n              case 5:\n                return _context2.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.ctx.undo();\n                return _context3.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.ctx.isUndoable) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(GraphSaveDataCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return GraphSaveDataCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphSaveDataCommand.prototype, \"init\", null);\n\nGraphSaveDataCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphSaveData.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };","map":null,"metadata":{},"sourceType":"module"}