{"ast":null,"code":"import _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useMemo } from 'react';\nimport { Form } from 'antd';\nimport { makeUpdaterByDependencies, makeFormItemControlledProps, isEmptyParamValue } from './util';\nexport var FormItemWrapper = function FormItemWrapper(props) {\n  var schema = props.schema,\n      children = props.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateReasonField = _useState2[0],\n      setUpdateReasonField = _useState2[1];\n\n  var dependencies = schema.dependencies,\n      value = schema.value,\n      defaultValue = schema.defaultValue,\n      hidden = schema.hidden,\n      disabled = schema.disabled;\n  var updater = useMemo(function () {\n    return (dependencies === null || dependencies === void 0 ? void 0 : dependencies.length) ? makeUpdaterByDependencies(dependencies, setUpdateReasonField) : undefined;\n  }, [dependencies]);\n\n  if (typeof children !== 'function') {\n    throw new Error('[Schema Form]: chilren of FormItemWrapper should be a render prop.');\n  }\n\n  var initValue = isEmptyParamValue(value) ? defaultValue : value;\n\n  if (updater) {\n    return React.createElement(Form.Item, {\n      noStyle: true,\n      shouldUpdate: updater\n    }, function (form) {\n      var _makeFormItemControll = makeFormItemControlledProps(form, schema, updateReasonField),\n          isHidden = _makeFormItemControll.hidden,\n          isDisabled = _makeFormItemControll.disabled;\n\n      return children({\n        hidden: isHidden,\n        disabled: isDisabled,\n        initialValue: initValue\n      });\n    });\n  }\n\n  return children({\n    hidden: hidden,\n    disabled: disabled,\n    initialValue: initValue\n  });\n};","map":null,"metadata":{},"sourceType":"module"}