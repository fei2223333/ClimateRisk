{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport { FunctionExt } from '@antv/x6';\nexport var Wrap = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Wrap, _React$PureComponent);\n\n  function Wrap(props) {\n    var _this;\n\n    _classCallCheck(this, Wrap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wrap).call(this, props));\n    _this.scheduledAnimationFrame = false;\n\n    _this.throttleUpdateFunc = function () {\n      if (_this.scheduledAnimationFrame) {\n        return;\n      }\n\n      _this.scheduledAnimationFrame = true;\n      window.requestAnimationFrame(function () {\n        _this.setState(function (state) {\n          _this.scheduledAnimationFrame = false;\n          return {\n            tick: state.tick + 1\n          };\n        });\n      });\n    };\n\n    _this.onChange = function (e) {\n      if (Wrap.throttleChangeTypes.includes(e.key)) {\n        _this.throttleUpdateFunc();\n\n        return;\n      } // eslint-disable-next-line react/no-access-state-in-setstate\n\n\n      _this.setState({\n        tick: _this.state.tick + 1\n      });\n    };\n\n    _this.state = {\n      tick: 0\n    };\n    return _this;\n  }\n\n  _createClass(Wrap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.node.on('change:*', this.onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.node.off('change:*', this.onChange);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(elem) {\n      var node = this.props.node;\n      return typeof elem.type === 'string' ? React.cloneElement(elem) : React.cloneElement(elem, {\n        node: node\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          graph = _this$props.graph,\n          node = _this$props.node,\n          component = _this$props.component;\n\n      if (React.isValidElement(component)) {\n        return this.clone(component);\n      }\n\n      if (typeof component === 'function') {\n        // Calling the component function on every change of the node.\n        var ret = FunctionExt.call(component, graph, node);\n\n        if (React.isValidElement(ret)) {\n          return this.clone(ret);\n        }\n      }\n\n      return component;\n    }\n  }]);\n\n  return Wrap;\n}(React.PureComponent);\nWrap.throttleChangeTypes = ['position', 'size'];","map":null,"metadata":{},"sourceType":"module"}