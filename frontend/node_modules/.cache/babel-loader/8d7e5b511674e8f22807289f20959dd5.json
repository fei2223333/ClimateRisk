{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ModifierKey } from '../types';\nimport { Dom, NumberExt } from '../util';\nimport { Disposable } from '../common';\nexport var MouseWheel = /*#__PURE__*/function (_Disposable) {\n  _inherits(MouseWheel, _Disposable);\n\n  function MouseWheel(options) {\n    var _this;\n\n    _classCallCheck(this, MouseWheel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MouseWheel).call(this));\n    _this.options = options;\n    _this.cumulatedFactor = 1;\n    var scroller = _this.graph.scroller.widget;\n    _this.container = scroller ? scroller.container : _this.graph.container;\n    _this.target = _this.options.global ? document : _this.container;\n    _this.mousewheelHandle = new Dom.MouseWheelHandle(_this.target, _this.onMouseWheel.bind(_assertThisInitialized(_assertThisInitialized(_this))), _this.allowMouseWheel.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    if (_this.options.enabled) {\n      _this.enable(true);\n    }\n\n    return _this;\n  }\n\n  _createClass(MouseWheel, [{\n    key: \"enable\",\n    value: function enable(force) {\n      if (this.disabled || force) {\n        this.options.enabled = true;\n        this.graph.options.mousewheel.enabled = true;\n        this.mousewheelHandle.enable();\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.disabled) {\n        this.options.enabled = false;\n        this.graph.options.mousewheel.enabled = false;\n        this.mousewheelHandle.disable();\n      }\n    }\n  }, {\n    key: \"allowMouseWheel\",\n    value: function allowMouseWheel(evt) {\n      var e = evt.originalEvent || evt;\n      var guard = this.options.guard;\n      return (guard == null || guard.call(this.graph, e)) && ModifierKey.isMatch(e, this.options.modifiers);\n    }\n  }, {\n    key: \"onMouseWheel\",\n    value: function onMouseWheel(evt) {\n      var e = evt.originalEvent || evt;\n      var guard = this.options.guard;\n\n      if ((guard == null || guard.call(this.graph, e)) && ModifierKey.isMatch(e, this.options.modifiers)) {\n        var factor = this.options.factor || 1.2;\n\n        if (this.currentScale == null) {\n          this.startPos = {\n            x: evt.clientX,\n            y: evt.clientY\n          };\n          this.currentScale = this.graph.scroller.widget ? this.graph.scroller.widget.zoom() : this.graph.transform.getScale().sx;\n        }\n\n        var delta = evt.deltaY;\n\n        if (delta < 0) {\n          // zoomin\n          // ------\n          // Switches to 1% zoom steps below 15%\n          if (this.currentScale < 0.15) {\n            this.cumulatedFactor = (this.currentScale + 0.01) / this.currentScale;\n          } else {\n            // Uses to 5% zoom steps for better grid rendering in\n            // webkit and to avoid rounding errors for zoom steps\n            this.cumulatedFactor = Math.round(this.currentScale * factor * 20) / 20 / this.currentScale;\n          }\n        } else {\n          // zoomout\n          // -------\n          // Switches to 1% zoom steps below 15%\n          if (this.currentScale <= 0.15) {\n            this.cumulatedFactor = (this.currentScale - 0.01) / this.currentScale;\n          } else {\n            // Uses to 5% zoom steps for better grid rendering in\n            // webkit and to avoid rounding errors for zoom steps\n            this.cumulatedFactor = Math.round(this.currentScale * (1 / factor) * 20) / 20 / this.currentScale;\n          }\n        }\n\n        this.cumulatedFactor = Math.max(0.01, Math.min(this.currentScale * this.cumulatedFactor, 160) / this.currentScale);\n        var scroller = this.graph.scroller.widget;\n        var currentScale = this.currentScale;\n        var targetScale = this.graph.transform.clampScale(currentScale * this.cumulatedFactor);\n        var minScale = this.options.minScale || Number.MIN_SAFE_INTEGER;\n        var maxScale = this.options.maxScale || Number.MAX_SAFE_INTEGER;\n        targetScale = NumberExt.clamp(targetScale, minScale, maxScale);\n\n        if (targetScale !== currentScale) {\n          if (scroller) {\n            if (this.options.zoomAtMousePosition) {\n              var origin = this.graph.coord.clientToLocalPoint(this.startPos);\n              scroller.zoom(targetScale, {\n                absolute: true,\n                center: origin.clone()\n              });\n            } else {\n              scroller.zoom(targetScale, {\n                absolute: true\n              });\n            }\n          } else if (this.options.zoomAtMousePosition) {\n            var _origin = this.graph.coord.clientToGraphPoint(this.startPos);\n\n            this.graph.zoom(targetScale, {\n              absolute: true,\n              center: _origin.clone()\n            });\n          } else {\n            this.graph.zoom(targetScale, {\n              absolute: true\n            });\n          }\n        }\n\n        this.currentScale = null;\n        this.cumulatedFactor = 1;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disable();\n    }\n  }, {\n    key: \"graph\",\n    get: function get() {\n      return this.options.graph;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.options.enabled !== true;\n    }\n  }]);\n\n  return MouseWheel;\n}(Disposable);\n\n__decorate([Disposable.dispose()], MouseWheel.prototype, \"dispose\", null);","map":null,"metadata":{},"sourceType":"module"}