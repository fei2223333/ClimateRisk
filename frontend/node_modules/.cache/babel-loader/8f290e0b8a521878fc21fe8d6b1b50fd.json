{"ast":null,"code":"import _defineProperty from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Toolbar } from '@antv/x6-react-components';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { IconStore } from '@antv/xflow-core';\nexport var ToolbarItem = function ToolbarItem(props) {\n  var app = useXFlowApp();\n  var item = props.item,\n      layout = props.layout;\n  var clz = classnames(_defineProperty({}, 'xflow-toolbar-item', true));\n  var text = layout === 'vertical' ? '' : item.text;\n  var icon = undefined;\n\n  if (item.icon) {\n    icon = item.icon;\n  } else if (item.iconName) {\n    var Icon = IconStore.get(item.iconName);\n    icon = React.createElement(Icon, null);\n  }\n\n  var ToolbarItemWrap = item.render;\n  var _item$isEnabled = item.isEnabled,\n      isEnabled = _item$isEnabled === void 0 ? true : _item$isEnabled;\n  var commandService = app.commandService,\n      modelService = app.modelService;\n\n  var onItemClick = function onItemClick() {\n    if (item.onClick) {\n      item.onClick({\n        toolbarItem: item,\n        commandService: commandService,\n        modelService: modelService\n      });\n    }\n  };\n\n  if (ToolbarItemWrap) {\n    return React.createElement(ToolbarItemWrap, Object.assign({}, item, {\n      onClick: onItemClick\n    }), React.createElement(Toolbar.Item, Object.assign({}, item, {\n      icon: icon,\n      text: text,\n      className: clz,\n      disabled: !isEnabled,\n      tooltip: item.tooltip || item.text,\n      tooltipProps: Object.assign({\n        placement: layout === 'vertical' ? 'left' : 'bottom'\n      }, item.tooltipProps),\n      onClick: function onClick() {}\n    })));\n  }\n\n  return React.createElement(Toolbar.Item, Object.assign({}, item, {\n    icon: icon,\n    text: text,\n    className: clz,\n    hidden: !item,\n    disabled: !isEnabled,\n    tooltip: item.tooltip || item.text,\n    onClick: onItemClick,\n    tooltipProps: Object.assign(Object.assign({}, item.tooltipProps), {\n      placement: layout === 'vertical' ? 'left' : 'bottom'\n    })\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}