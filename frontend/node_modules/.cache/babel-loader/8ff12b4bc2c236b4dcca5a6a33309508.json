{"ast":null,"code":"import _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FunctionExt } from '../util';\nexport var Events = /*#__PURE__*/function () {\n  function Events() {\n    _classCallCheck(this, Events);\n\n    this.listeners = {};\n  }\n\n  _createClass(Events, [{\n    key: \"on\",\n    value: function on(name, handler, context) {\n      if (handler == null) {\n        return this;\n      }\n\n      if (!this.listeners[name]) {\n        this.listeners[name] = [];\n      }\n\n      var cache = this.listeners[name];\n      cache.push(handler, context);\n      return this;\n    }\n  }, {\n    key: \"once\",\n    value: function once(name, handler, context) {\n      var _this = this;\n\n      var cb = function cb() {\n        _this.off(name, cb);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return Private.call([handler, context], args);\n      };\n\n      return this.on(name, cb, this);\n    }\n  }, {\n    key: \"off\",\n    value: function off(name, handler, context) {\n      // remove all events.\n      if (!(name || handler || context)) {\n        this.listeners = {};\n        return this;\n      }\n\n      var listeners = this.listeners;\n      var names = name ? [name] : Object.keys(listeners);\n      names.forEach(function (n) {\n        var cache = listeners[n];\n\n        if (!cache) {\n          return;\n        } // remove all events with specified name.\n\n\n        if (!(handler || context)) {\n          delete listeners[n];\n          return;\n        }\n\n        for (var i = cache.length - 2; i >= 0; i -= 2) {\n          if (!(handler && cache[i] !== handler || context && cache[i + 1] !== context)) {\n            cache.splice(i, 2);\n          }\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(name) {\n      var returned = true;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      if (name !== '*') {\n        var _list = this.listeners[name];\n\n        if (_list != null) {\n          returned = Private.call(_toConsumableArray(_list), args);\n        }\n      }\n\n      var list = this.listeners['*'];\n\n      if (list != null) {\n        return FunctionExt.toAsyncBoolean([returned, Private.call(_toConsumableArray(list), [name].concat(args))]);\n      }\n\n      return returned;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n\n      return this.trigger.apply(this, [name].concat(args));\n    }\n  }]);\n\n  return Events;\n}();\nvar Private;\n\n(function (Private) {\n  function call(list, args) {\n    var results = [];\n\n    for (var i = 0; i < list.length; i += 2) {\n      var handler = list[i];\n      var context = list[i + 1];\n      var params = Array.isArray(args) ? args : [args];\n      var ret = FunctionExt.apply(handler, context, params);\n      results.push(ret);\n    }\n\n    return FunctionExt.toAsyncBoolean(results);\n  }\n\n  Private.call = call;\n})(Private || (Private = {}));","map":null,"metadata":{},"sourceType":"module"}