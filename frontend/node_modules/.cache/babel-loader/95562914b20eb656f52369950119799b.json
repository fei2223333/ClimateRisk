{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport var SizeManager = /*#__PURE__*/function (_Base) {\n  _inherits(SizeManager, _Base);\n\n  function SizeManager() {\n    _classCallCheck(this, SizeManager);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SizeManager).apply(this, arguments));\n  }\n\n  _createClass(SizeManager, [{\n    key: \"hasScroller\",\n    value: function hasScroller() {\n      return this.graph.scroller.widget != null;\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.hasScroller() ? this.graph.scroller.widget.container : this.graph.container;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var autoResize = this.options.autoResize;\n\n      if (autoResize) {\n        var target = typeof autoResize === 'boolean' ? this.getContainer() : autoResize;\n        SizeSensor.bind(target, function () {\n          var container = _this.getContainer(); // container is border-box\n\n\n          var width = container.offsetWidth;\n          var height = container.offsetHeight;\n\n          _this.resize(width, height);\n        });\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (this.hasScroller()) {\n        this.resizeScroller(width, height);\n      } else {\n        this.resizeGraph(width, height);\n      }\n    }\n  }, {\n    key: \"resizeGraph\",\n    value: function resizeGraph(width, height) {\n      this.graph.transform.resize(width, height);\n    }\n  }, {\n    key: \"resizeScroller\",\n    value: function resizeScroller(width, height) {\n      this.graph.scroller.resize(width, height);\n    }\n  }, {\n    key: \"resizePage\",\n    value: function resizePage(width, height) {\n      var instance = this.graph.scroller.widget;\n\n      if (instance) {\n        instance.updatePageSize(width, height);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      SizeSensor.clear(this.getContainer());\n    }\n  }]);\n\n  return SizeManager;\n}(Base);\n\n__decorate([Base.dispose()], SizeManager.prototype, \"dispose\", null);","map":null,"metadata":{},"sourceType":"module"}