{"ast":null,"code":"import _defineProperty from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './context';\nexport var MenuItemInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MenuItemInner, _React$PureComponent);\n\n  function MenuItemInner() {\n    var _this;\n\n    _classCallCheck(this, MenuItemInner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuItemInner).apply(this, arguments));\n\n    _this.onHotkey = function () {\n      _this.triggerHandler();\n    };\n\n    _this.onClick = function (e) {\n      _this.triggerHandler(e);\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuItemInner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var hotkey = this.props.hotkey;\n\n      if (hotkey) {\n        this.props.context.registerHotkey(hotkey, this.onHotkey);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var hotkey = this.props.hotkey;\n\n      if (hotkey) {\n        this.props.context.unregisterHotkey(hotkey, this.onHotkey);\n      }\n    }\n  }, {\n    key: \"triggerHandler\",\n    value: function triggerHandler(e) {\n      if (!this.props.disabled && !this.props.hidden) {\n        if (this.props.name) {\n          this.props.context.onClick(this.props.name, e);\n        }\n\n        if (this.props.onClick) {\n          this.props.onClick();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", Object.assign({}, MenuItemInner.getProps(this.props)), MenuItemInner.getContent(this.props, this.onClick));\n    }\n  }]);\n\n  return MenuItemInner;\n}(React.PureComponent);\n\n(function (MenuItemInner) {\n  function getProps(props, extraCls) {\n    var _classNames;\n\n    var className = props.className,\n        disabled = props.disabled,\n        active = props.active,\n        hidden = props.hidden;\n    var prefixCls = props.context.prefixCls;\n    var baseCls = \"\".concat(prefixCls, \"-item\");\n    return {\n      className: classNames(baseCls, extraCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(baseCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(baseCls, \"-hidden\"), hidden), _defineProperty(_classNames, \"\".concat(baseCls, \"-disabled\"), disabled), _classNames), className)\n    };\n  }\n\n  MenuItemInner.getProps = getProps;\n\n  function getContent(props, onClick, innerExtra, outerExtra) {\n    var icon = props.icon,\n        text = props.text,\n        hotkey = props.hotkey,\n        children = props.children;\n    var prefixCls = props.context.prefixCls;\n    var baseCls = \"\".concat(prefixCls, \"-item\");\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"\".concat(baseCls, \"-button\"),\n      onClick: onClick\n    }, icon && React.isValidElement(icon) && React.createElement(\"span\", {\n      className: \"\".concat(baseCls, \"-icon\")\n    }, icon), React.createElement(\"span\", {\n      className: \"\".concat(baseCls, \"-text\")\n    }, text || children), hotkey && React.createElement(\"span\", {\n      className: \"\".concat(baseCls, \"-hotkey\")\n    }, hotkey), innerExtra), outerExtra);\n  }\n\n  MenuItemInner.getContent = getContent;\n})(MenuItemInner || (MenuItemInner = {}));\n\nexport var MenuItem = function MenuItem(props) {\n  return React.createElement(MenuContext.Consumer, null, function (context) {\n    return React.createElement(MenuItemInner, Object.assign({\n      context: context\n    }, props));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}