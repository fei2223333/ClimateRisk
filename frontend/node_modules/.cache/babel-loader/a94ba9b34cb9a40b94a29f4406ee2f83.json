{"ast":null,"code":"import { isAnyArray } from 'is-any-array';\nimport Matrix from './matrix';\nexport function correlation(xMatrix) {\n  var yMatrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : xMatrix;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  xMatrix = new Matrix(xMatrix);\n  var yIsSame = false;\n\n  if (typeof yMatrix === 'object' && !Matrix.isMatrix(yMatrix) && !isAnyArray(yMatrix)) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  var _options = options,\n      _options$center = _options.center,\n      center = _options$center === void 0 ? true : _options$center,\n      _options$scale = _options.scale,\n      scale = _options$scale === void 0 ? true : _options$scale;\n\n  if (center) {\n    xMatrix.center('column');\n\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n\n  if (scale) {\n    xMatrix.scale('column');\n\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  var sdx = xMatrix.standardDeviation('column', {\n    unbiased: true\n  });\n  var sdy = yIsSame ? sdx : yMatrix.standardDeviation('column', {\n    unbiased: true\n  });\n  var corr = xMatrix.transpose().mmul(yMatrix);\n\n  for (var i = 0; i < corr.rows; i++) {\n    for (var j = 0; j < corr.columns; j++) {\n      corr.set(i, j, corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n\n  return corr;\n}","map":null,"metadata":{},"sourceType":"module"}