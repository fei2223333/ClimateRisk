{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nimport { Base } from \"./base\";\n/**\n * 随机布局\n */\n\nexport var RandomLayout = /*#__PURE__*/function (_Base) {\n  _inherits(RandomLayout, _Base);\n\n  function RandomLayout(options) {\n    var _this;\n\n    _classCallCheck(this, RandomLayout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomLayout).call(this));\n    /** 布局中心 */\n\n    _this.center = [0, 0];\n    /** 宽度 */\n\n    _this.width = 300;\n    /** 高度 */\n\n    _this.height = 300;\n    _this.nodes = [];\n    _this.edges = [];\n    /** 迭代结束的回调函数 */\n\n    _this.onLayoutEnd = function () {};\n\n    _this.updateCfg(options);\n\n    return _this;\n  }\n\n  _createClass(RandomLayout, [{\n    key: \"getDefaultCfg\",\n    value: function getDefaultCfg() {\n      return {\n        center: [0, 0],\n        width: 300,\n        height: 300\n      };\n    }\n    /**\n     * 执行布局\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var self = this;\n      var nodes = self.nodes;\n      var layoutScale = 0.9;\n      var center = self.center;\n\n      if (!self.width && typeof window !== \"undefined\") {\n        self.width = window.innerWidth;\n      }\n\n      if (!self.height && typeof window !== \"undefined\") {\n        self.height = window.innerHeight;\n      }\n\n      if (nodes) {\n        nodes.forEach(function (node) {\n          node.x = (Math.random() - 0.5) * layoutScale * self.width + center[0];\n          node.y = (Math.random() - 0.5) * layoutScale * self.height + center[1];\n        });\n      }\n\n      if (self.onLayoutEnd) self.onLayoutEnd();\n      return {\n        nodes: nodes,\n        edges: this.edges\n      };\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return \"random\";\n    }\n  }]);\n\n  return RandomLayout;\n}(Base);","map":null,"metadata":{},"sourceType":"module"}