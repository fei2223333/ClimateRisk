{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport var ToolbarRegistry = function ToolbarRegistry(props) {\n  _objectDestructuringEmpty(props);\n  /** 获取配置中心 */\n\n\n  var extensionRegistry = useExtensionRegistry();\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: {\n        CONFIG_TYPE: 'ToolbarRegistry',\n        getConfig: function getConfig() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      },\n      createModule: createModule\n    });\n    return function () {\n      disposable.dispose();\n    };\n  }, [extensionRegistry]);\n  return null;\n};\nToolbarRegistry.defaultProps = {\n  XFlowModuleType: 'ToolbarRegistry'\n};","map":null,"metadata":{},"sourceType":"module"}