{"ast":null,"code":"import _defineProperty from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { useXFlowApp, usePositionStyle } from '@antv/xflow-core';\nimport classNames from 'classnames';\nimport { PropsProxy } from './config';\nimport { PanelContext } from './context';\n\nvar WorkspacePanel = function WorkspacePanel(props) {\n  var _classNames;\n\n  var className = props.className,\n      position = props.position,\n      style = props.style,\n      children = props.children;\n  var app = useXFlowApp();\n  var positionStyle = usePositionStyle(position);\n  var propsProxy = React.useMemo(function () {\n    return new PropsProxy();\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      propsProxy.dispose();\n    };\n  }, [propsProxy]);\n\n  if (!app || !app.modelService) {\n    return null;\n  }\n\n  propsProxy.getValue = function () {\n    return props;\n  };\n\n  var clz = classNames((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'xflow-workspace-panel', true), _classNames));\n  var commandService = app.commandService,\n      modelService = app.modelService;\n  return React.createElement(PanelContext.Provider, {\n    value: {\n      propsProxy: propsProxy,\n      commandService: commandService,\n      modelService: modelService\n    }\n  }, React.createElement(\"div\", {\n    className: clz,\n    style: Object.assign(Object.assign({}, positionStyle), style)\n  }, children));\n};\n\nexport { usePanelContext } from './context';\nexport { WorkspacePanel };","map":null,"metadata":{},"sourceType":"module"}