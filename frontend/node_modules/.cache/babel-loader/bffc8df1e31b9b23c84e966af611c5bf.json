{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { // app service\nIconStore } from '@antv/xflow-core';\nimport { Menu } from '@antv/x6-react-components';\nexport var renderMenuOptions = function renderMenuOptions(props) {\n  var idx = props.idx,\n      menuItem = props.menuOptions,\n      target = props.target,\n      modelService = props.modelService,\n      commandService = props.commandService,\n      onHide = props.onHide;\n  var id = menuItem.id,\n      label = menuItem.label,\n      _menuItem$isEnabled = menuItem.isEnabled,\n      isEnabled = _menuItem$isEnabled === void 0 ? true : _menuItem$isEnabled,\n      _menuItem$isVisible = menuItem.isVisible,\n      isVisible = _menuItem$isVisible === void 0 ? true : _menuItem$isVisible,\n      iconName = menuItem.iconName,\n      _menuItem$submenu = menuItem.submenu,\n      submenu = _menuItem$submenu === void 0 ? [] : _menuItem$submenu,\n      active = menuItem.active,\n      hotkey = menuItem.hotkey,\n      render = menuItem.render,\n      _onClick = menuItem.onClick;\n\n  if (!isVisible) {\n    return null;\n  }\n  /** 分隔符：separator */\n\n\n  if (menuItem.type === 'separator') {\n    return React.createElement(Menu.Divider, {\n      key: String(menuItem.id) + idx\n    });\n  }\n  /** 根结点：root */\n\n\n  if (menuItem.type === 'root') {\n    return React.createElement(Menu, {\n      hasIcon: true\n    }, submenu.map(function (item, submenuIdx) {\n      return renderMenuOptions({\n        idx: submenuIdx,\n        target: target,\n        commandService: commandService,\n        modelService: modelService,\n        menuOptions: item,\n        onHide: onHide\n      });\n    }));\n  }\n  /** 子菜单：submenu */\n\n\n  if (menuItem.submenu && Array.isArray(menuItem.submenu)) {\n    var _Icon = IconStore.get(iconName);\n\n    var isDisable = !isEnabled;\n    return React.createElement(Menu.SubMenu, {\n      key: String(id),\n      text: label,\n      disabled: isDisable || submenu.length === 0,\n      icon: _Icon ? React.createElement(_Icon, null) : null,\n      active: active,\n      hotkey: hotkey\n    }, submenu.map(function (item, submenuIdx) {\n      return renderMenuOptions({\n        idx: submenuIdx,\n        target: target,\n        commandService: commandService,\n        modelService: modelService,\n        menuOptions: item,\n        onHide: onHide\n      });\n    }));\n  }\n  /** 叶子节点 */\n\n\n  var Icon = IconStore.get(iconName);\n\n  if (render) {\n    return React.createElement(render, {\n      menuItem: menuItem,\n      target: target,\n      commandService: commandService,\n      modelService: modelService,\n      onHide: onHide\n    }, [React.createElement(Menu.Item, {\n      key: String(id),\n      text: label,\n      disabled: !isEnabled,\n      icon: Icon ? React.createElement(Icon, null) : null,\n      active: active,\n      hotkey: hotkey\n    })]);\n  }\n\n  return React.createElement(Menu.Item, {\n    key: String(id),\n    text: label,\n    disabled: !isEnabled,\n    icon: Icon ? React.createElement(Icon, null) : null,\n    active: active,\n    hotkey: hotkey,\n    onClick: function onClick() {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _onClick({\n                  menuItem: menuItem,\n                  target: target,\n                  commandService: commandService,\n                  modelService: modelService\n                });\n\n              case 2:\n                onHide && onHide();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}