{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Geometry } from '../geometry';\nexport var Segment = /*#__PURE__*/function (_Geometry) {\n  _inherits(Segment, _Geometry);\n\n  function Segment() {\n    var _this;\n\n    _classCallCheck(this, Segment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Segment).apply(this, arguments));\n    _this.isVisible = true;\n    _this.isSegment = true;\n    _this.isSubpathStart = false;\n    return _this;\n  }\n\n  _createClass(Segment, [{\n    key: \"closestPointT\",\n    value: function closestPointT(p, options) {\n      if (this.closestPointNormalizedLength) {\n        return this.closestPointNormalizedLength(p);\n      }\n\n      throw new Error('Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.');\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"lengthAtT\",\n    value: function lengthAtT(t, options) {\n      if (t <= 0) {\n        return 0;\n      }\n\n      var length = this.length();\n\n      if (t >= 1) {\n        return length;\n      }\n\n      return length * t;\n    }\n  }, {\n    key: \"divideAtT\",\n    value: function divideAtT(t) {\n      if (this.divideAt) {\n        return this.divideAt(t);\n      }\n\n      throw new Error('Neither `divideAtT` nor `divideAt` method is implemented.');\n    }\n  }, {\n    key: \"pointAtT\",\n    value: function pointAtT(t) {\n      if (this.pointAt) {\n        return this.pointAt(t);\n      }\n\n      throw new Error('Neither `pointAtT` nor `pointAt` method is implemented.');\n    }\n  }, {\n    key: \"tangentAtT\",\n    value: function tangentAtT(t) {\n      if (this.tangentAt) {\n        return this.tangentAt(t);\n      }\n\n      throw new Error('Neither `tangentAtT` nor `tangentAt` method is implemented.');\n    }\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this.endPoint;\n    }\n  }, {\n    key: \"start\",\n    get: function get() {\n      if (this.previousSegment == null) {\n        throw new Error('Missing previous segment. (This segment cannot be the ' + 'first segment of a path, or segment has not yet been ' + 'added to a path.)');\n      }\n\n      return this.previousSegment.end;\n    }\n  }]);\n\n  return Segment;\n}(Geometry);","map":null,"metadata":{},"sourceType":"module"}