{"ast":null,"code":"import _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { StringInput } from './string-input';\nimport { Checkbox } from './checkbox';\nimport { TextArea } from './text-area';\nimport { Select } from './select';\nimport { Datetime } from './datetime';\nimport { Float } from './float';\nimport { ControlShape } from '../../interface';\nexport var xflowDefaultControls = [[ControlShape.INPUT, StringInput], [ControlShape.CHECKBOX, Checkbox], [ControlShape.TEXTAREA, TextArea], [ControlShape.DATETIME, Datetime], [ControlShape.SELECT, Select], [ControlShape.FLOAT, Float]];\nexport var makeControlMap = function makeControlMap(controls) {\n  var controlMap = new Map();\n  controls.forEach(function (item) {\n    var _item = _slicedToArray(item, 2),\n        key = _item[0],\n        control = _item[1];\n\n    var uuid = key.toLowerCase();\n\n    if (controlMap.has(uuid)) {\n      console.error(\"\".concat(key, \" is duplicated in controlMap:\"), controlMap);\n    }\n\n    controlMap.set(uuid, control);\n  });\n  return controlMap;\n};\nexport var getControlFromMap = function getControlFromMap(key, controlMap) {\n  var defaultControl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : StringInput;\n\n  if (controlMap.has(key)) {\n    return controlMap.get(key);\n  }\n\n  var uuid = key.toLowerCase();\n\n  if (controlMap.has(uuid)) {\n    return controlMap.get(uuid);\n  }\n\n  console.warn(\"\".concat(key, \" is not exist in controlmap, fallback to defaultControl\"));\n  return defaultControl;\n};","map":null,"metadata":{},"sourceType":"module"}