{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { MenuContext } from './context';\nimport { MenuItemInner } from './item';\nexport var MenuSubMenu = function MenuSubMenu(props) {\n  var hotkey = props.hotkey,\n      children = props.children,\n      others = __rest(props, [\"hotkey\", \"children\"]);\n\n  return React.createElement(MenuContext.Consumer, null, function (context) {\n    var prefixCls = context.prefixCls;\n    var wrapProps = MenuItemInner.getProps(Object.assign({\n      context: context\n    }, props), \"\".concat(prefixCls, \"-submenu\"));\n    return React.createElement(\"div\", Object.assign({}, wrapProps), MenuItemInner.getContent(Object.assign({\n      context: context\n    }, others), null, React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-submenu-arrow\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-submenu-menu\")\n    }, children)));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}