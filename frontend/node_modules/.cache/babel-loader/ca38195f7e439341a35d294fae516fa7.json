{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport React, { useState, useCallback, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { NodeView } from '@antv/x6';\nimport { Wrap } from '../wrap';\nvar action = 'react';\nexport function createPortal(uniqViewId) {\n  var setGraphRef = {\n    current: function current() {}\n  };\n\n  var setGraph = function setGraph(graph) {\n    setGraphRef.current(graph);\n  };\n\n  var add;\n  var remove;\n\n  function connect(id, portal) {\n    add({\n      id: id,\n      portal: portal\n    });\n  }\n\n  function disconnect(id) {\n    remove(id);\n  }\n\n  var Portal = function Portal() {\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        items = _useState2[0],\n        setItems = _useState2[1];\n\n    var _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        graph = _useState4[0],\n        setGraphInstance = _useState4[1];\n\n    var pendingAddIdsRef = useRef([]);\n    var pendingAddItemsRef = useRef([]);\n    setGraphRef.current = setGraphInstance;\n    var addItem = useCallback(function (payload) {\n      var id = payload.id;\n\n      if (pendingAddIdsRef.current.includes(id)) {\n        // if in pendingAddIds queue\n        var itms = pendingAddItemsRef.current;\n        var matchIndex = itms.findIndex(function (item) {\n          return item.id === id;\n        });\n\n        if (matchIndex > -1) {\n          itms[matchIndex] = payload;\n        } else {\n          itms.push(payload);\n        }\n\n        pendingAddItemsRef.current = itms;\n      } else {\n        // if not in pendingAddIds queue\n        setItems(function (prevItems) {\n          var nextItems = _toConsumableArray(prevItems);\n\n          var matchIndex = nextItems.findIndex(function (item) {\n            return item.id === id;\n          });\n\n          if (matchIndex > -1) {\n            nextItems[matchIndex] = payload;\n          } else {\n            nextItems.push(payload);\n          }\n\n          return nextItems;\n        });\n      }\n    }, []);\n    add = addItem;\n    var removeItem = useCallback(function (id) {\n      if (pendingAddIdsRef.current.includes(id)) {\n        pendingAddIdsRef.current = pendingAddIdsRef.current.filter(function (cId) {\n          return cId !== id;\n        });\n      }\n\n      if (pendingAddItemsRef.current.map(function (c) {\n        return c.id;\n      }).includes(id)) {\n        pendingAddItemsRef.current = pendingAddItemsRef.current.filter(function (c) {\n          return c.id !== id;\n        });\n      }\n\n      setItems(function (itms) {\n        return itms.filter(function (item) {\n          return item.id !== id;\n        });\n      });\n    }, []);\n    remove = removeItem;\n    var startBatch = useCallback(function (args) {\n      var name = args.name,\n          data = args.data;\n\n      var _ref = data || {},\n          _ref$cells = _ref.cells,\n          cells = _ref$cells === void 0 ? [] : _ref$cells;\n\n      if (name === 'add') {\n        var cellIds = cells.filter(function (cell) {\n          return cell.isNode();\n        }).map(function (cell) {\n          return cell.id;\n        });\n        pendingAddIdsRef.current = Array.from(new Set([].concat(_toConsumableArray(pendingAddIdsRef.current), _toConsumableArray(cellIds))));\n      }\n    }, []);\n    var stopBatch = useCallback(function (_ref2) {\n      var name = _ref2.name;\n\n      if (name === 'add') {\n        var pendingAdds = pendingAddItemsRef.current;\n\n        if (pendingAdds.length) {\n          var currentPendingAddIds = pendingAdds.map(function (pendingAddItem) {\n            return pendingAddItem.id;\n          });\n          pendingAddIdsRef.current = pendingAddIdsRef.current.filter(function (id) {\n            return !currentPendingAddIds.includes(id);\n          });\n          pendingAddItemsRef.current = [];\n          setItems(function (prevItems) {\n            var nextItems = _toConsumableArray(prevItems);\n\n            pendingAdds.forEach(function (pendingAddItem) {\n              var matchIndex = nextItems.findIndex(function (item) {\n                return item.id === pendingAddItem.id;\n              });\n\n              if (matchIndex > -1) {\n                nextItems[matchIndex] = pendingAddItem;\n              } else {\n                nextItems.push(pendingAddItem);\n              }\n            });\n            return nextItems;\n          });\n        }\n      }\n    }, []);\n    useLayoutEffect(function () {\n      if (graph) {\n        graph.on('batch:start', startBatch);\n        graph.on('batch:stop', stopBatch);\n      }\n\n      return function () {\n        if (graph) {\n          graph.off('batch:start', startBatch);\n          graph.off('batch:stop', stopBatch);\n          setItems([]);\n          pendingAddIdsRef.current = [];\n          pendingAddItemsRef.current = [];\n        }\n      };\n    }, [graph, startBatch, stopBatch]);\n    return React.createElement.apply(React, [React.Fragment, null].concat(_toConsumableArray(items.map(function (item) {\n      return item.portal;\n    }))));\n  };\n\n  var ReactShapeView = /*#__PURE__*/function (_NodeView) {\n    _inherits(ReactShapeView, _NodeView);\n\n    function ReactShapeView() {\n      _classCallCheck(this, ReactShapeView);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ReactShapeView).apply(this, arguments));\n    }\n\n    _createClass(ReactShapeView, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        _get(_getPrototypeOf(ReactShapeView.prototype), \"init\", this).call(this);\n\n        this.cell.on('removed', function () {\n          disconnect(_this.cell.id);\n        });\n      }\n    }, {\n      key: \"getComponentContainer\",\n      value: function getComponentContainer() {\n        return this.cell.prop('useForeignObject') === false ? this.selectors.content : this.selectors.foContent;\n      }\n    }, {\n      key: \"confirmUpdate\",\n      value: function confirmUpdate(flag) {\n        var _this2 = this;\n\n        var ret = _get(_getPrototypeOf(ReactShapeView.prototype), \"confirmUpdate\", this).call(this, flag);\n\n        return this.handleAction(ret, action, function () {\n          return _this2.renderReactComponent();\n        });\n      }\n    }, {\n      key: \"renderReactComponent\",\n      value: function renderReactComponent() {\n        this.unmountReactComponent();\n        var root = this.getComponentContainer();\n        var node = this.cell;\n        var graph = this.graph;\n\n        if (root) {\n          var component = this.graph.hook.getReactComponent(node);\n          var elem = React.createElement(Wrap, {\n            graph: graph,\n            node: node,\n            component: component\n          });\n          connect(this.cell.id, ReactDOM.createPortal(elem, root));\n        }\n      }\n    }, {\n      key: \"unmountReactComponent\",\n      value: function unmountReactComponent() {\n        var root = this.getComponentContainer();\n\n        if (root) {\n          ReactDOM.unmountComponentAtNode(root);\n        }\n\n        return root;\n      }\n    }, {\n      key: \"onMouseDown\",\n      value: function onMouseDown(e, x, y) {\n        var target = e.target;\n        var tagName = target.tagName.toLowerCase();\n\n        if (tagName === 'input') {\n          var type = target.getAttribute('type');\n\n          if (type == null || ['text', 'password', 'number', 'email', 'search', 'tel', 'url'].includes(type)) {\n            return;\n          }\n        }\n\n        _get(_getPrototypeOf(ReactShapeView.prototype), \"onMouseDown\", this).call(this, e, x, y);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        disconnect(this.cell.id);\n        this.unmountReactComponent();\n      }\n    }]);\n\n    return ReactShapeView;\n  }(NodeView);\n\n  __decorate([NodeView.dispose()], ReactShapeView.prototype, \"dispose\", null);\n\n  ReactShapeView.config({\n    bootstrap: [action],\n    actions: {\n      component: action\n    }\n  });\n  NodeView.registry.register(uniqViewId, ReactShapeView, true);\n  return {\n    Portal: Portal,\n    setGraph: setGraph\n  };\n}\nexport function usePortal(uniqViewId) {\n  var initializedRef = useRef(false);\n\n  var _useState5 = useState(function () {\n    if (!initializedRef.current) {\n      initializedRef.current = true;\n      return createPortal(uniqViewId);\n    }\n\n    return {}; // won't be used\n  }),\n      _useState6 = _slicedToArray(_useState5, 1),\n      PortalContainer = _useState6[0];\n\n  return [PortalContainer.Portal, PortalContainer.setGraph];\n}","map":null,"metadata":{},"sourceType":"module"}