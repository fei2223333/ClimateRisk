{"ast":null,"code":"var _jsxFileName = \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nvar Dragger = Upload.Dragger;\nvar props = {\n  name: 'file',\n  action: '',\n  beforeUpload: function beforeUpload(file) {\n    if (file.size / 1024 / 1024 > 50 || !(file.type === 'excel/csv')) {\n      message.error(\"\".concat(file.name, \" exceeded 50 MB.\"));\n      return Upload.LIST_IGNORE;\n    }\n\n    return false;\n  },\n  onChange: function onChange(info) {\n    var _info$file = info.file,\n        status = _info$file.status,\n        size = _info$file.size;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n    } else if (status === 'error') {\n      message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  },\n  onDrop: function onDrop(e) {\n    console.log('Dropped files', e.dataTransfer.files);\n  }\n};\nexport default function SpineContent() {\n  return /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InboxOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Supported File Format: CSV, EXCEL\"));\n}\nSpineContent.propTypes = {};\nSpineContent.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dragger, \"Dragger\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(props, \"props\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(SpineContent, \"SpineContent\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js"],"names":["React","useState","Upload","message","InboxOutlined","Dragger","props","name","action","beforeUpload","file","size","type","error","LIST_IGNORE","onChange","info","status","console","log","fileList","success","onDrop","e","dataTransfer","files","SpineContent","propTypes","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;IAEQC,O,GAAYH,M,CAAZG,O;AACR,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,MADM;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAIZC,EAAAA,YAJY,wBAICC,IAJD,EAIM;AAChB,QAAGA,IAAI,CAACC,IAAL,GAAU,IAAV,GAAe,IAAf,GAAsB,EAAtB,IAA4B,EAAED,IAAI,CAACE,IAAL,KAAc,WAAhB,CAA/B,EAA4D;AACxDT,MAAAA,OAAO,CAACU,KAAR,WAAiBH,IAAI,CAACH,IAAtB;AACA,aAAOL,MAAM,CAACY,WAAd;AACD;;AACD,WAAO,KAAP;AACH,GAVW;AAWZC,EAAAA,QAXY,oBAWHC,IAXG,EAWG;AAAA,qBACYA,IAAI,CAACN,IADjB;AAAA,QACLO,MADK,cACLA,MADK;AAAA,QACGN,IADH,cACGA,IADH;;AAGb,QAAIM,MAAM,KAAK,WAAf,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACN,IAAjB,EAAuBM,IAAI,CAACI,QAA5B;AACD;;AACD,QAAIH,MAAM,KAAK,MAAf,EAAuB;AAErBd,MAAAA,OAAO,CAACkB,OAAR,WAAmBL,IAAI,CAACN,IAAL,CAAUH,IAA7B;AACD,KAHD,MAGO,IAAIU,MAAM,KAAK,OAAf,EAAwB;AAC7Bd,MAAAA,OAAO,CAACU,KAAR,WAAiBG,IAAI,CAACN,IAAL,CAAUH,IAA3B;AACD;AACF,GAvBW;AAwBZe,EAAAA,MAxBY,kBAwBLC,CAxBK,EAwBF;AACRL,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BI,CAAC,CAACC,YAAF,CAAeC,KAA5C;AACD;AA1BW,CAAd;AA6BA,eAAe,SAASC,YAAT,GAAwB;AACrC,sBACE,oBAAC,OAAD,oBAAapB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAJF,eAKE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALF,CADF;AAWD;AAEDoB,YAAY,CAACC,SAAb,GAAyB,EAAzB;AACAD,YAAY,CAACE,YAAb,GAA4B,EAA5B;;;;;;;;;;0BA7CQvB,O;0BACFC,K;0BA6BkBoB,Y","sourcesContent":["import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nconst { Dragger } = Upload;\nconst props = {\n  name: 'file',\n  action: ''\n  ,\n  beforeUpload(file){\n    if(file.size/1024/1024 > 50 || !(file.type === 'excel/csv')){\n        message.error(`${file.name} exceeded 50 MB.`);\n        return Upload.LIST_IGNORE;\n      }\n      return false;\n  },\n  onChange(info) {\n    const { status, size } = info.file;\n  \n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      \n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  onDrop(e) {\n    console.log('Dropped files', e.dataTransfer.files);\n  },\n};\n\nexport default function SpineContent() {\n  return (\n    <Dragger {...props}>\n      <p className=\"ant-upload-drag-icon\">\n        <InboxOutlined />\n      </p>\n      <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n      <p className=\"ant-upload-hint\">\n        Supported File Format: CSV, EXCEL\n      </p>\n    </Dragger>\n  );\n}\n\nSpineContent.propTypes = {};\nSpineContent.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}