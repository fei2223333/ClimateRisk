{"ast":null,"code":"import _defineProperty from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events  */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Popover } from 'antd';\nimport 'antd/es/popover/style/index.css';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { SketchPicker } from 'react-color';\nexport var ColorPicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(ColorPicker, _React$Component);\n\n  function ColorPicker(props) {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorPicker).call(this, props));\n\n    _this.onDocumentClick = function (e) {\n      var target = e.target;\n\n      if (target === _this.container || _this.container.contains(target)) {\n        return;\n      }\n\n      _this.setState({\n        active: false\n      });\n\n      _this.unbindDocEvent();\n    };\n\n    _this.handleChange = function (value, event) {\n      if (_this.props.onChange) {\n        _this.props.onChange(value, event);\n      }\n\n      _this.setState({\n        active: false,\n        color: value.rgb\n      });\n\n      _this.unbindDocEvent();\n    };\n\n    _this.handleClick = function (e) {\n      e.stopPropagation();\n\n      if (_this.state.active) {\n        _this.setState({\n          active: false\n        });\n\n        _this.unbindDocEvent();\n      } else {\n        _this.setState({\n          active: true\n        });\n\n        if (!_this.removeDocClickEvent) {\n          _this.removeDocClickEvent = addEventListener(document.documentElement, 'click', _this.onDocumentClick).remove;\n        }\n      }\n    };\n\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n\n    _this.state = {\n      active: false,\n      color: props.color\n    };\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocEvent();\n    }\n  }, {\n    key: \"unbindDocEvent\",\n    value: function unbindDocEvent() {\n      if (this.removeDocClickEvent) {\n        this.removeDocClickEvent();\n        this.removeDocClickEvent = null;\n      }\n    }\n  }, {\n    key: \"renderPicker\",\n    value: function renderPicker() {\n      var _a = this.props,\n          prefixCls = _a.prefixCls,\n          disabled = _a.disabled,\n          style = _a.style,\n          props = __rest(_a, [\"prefixCls\", \"disabled\", \"style\"]);\n\n      return React.createElement(SketchPicker, Object.assign({\n        width: \"240px\"\n      }, props, {\n        onChange: this.handleChange\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.state.color;\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          overlayProps = _this$props.overlayProps,\n          style = _this$props.style;\n      var baseCls = \"\".concat(this.props.prefixCls, \"-color-picker\");\n      var popoverProps = {};\n\n      if (disabled) {\n        popoverProps.visible = false;\n      } else {\n        popoverProps.visible = this.state.active;\n      }\n\n      var colorStr = typeof color === 'string' ? color : \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(color.a, \")\");\n      return React.createElement(Popover, Object.assign({\n        placement: \"topLeft\"\n      }, overlayProps, popoverProps, {\n        content: this.renderPicker(),\n        overlayClassName: \"\".concat(baseCls, \"-overlay\")\n      }), React.createElement(\"div\", {\n        style: style,\n        ref: this.refContainer,\n        onClick: this.handleClick,\n        className: classNames(baseCls, _defineProperty({}, \"\".concat(baseCls, \"-disabled\"), disabled))\n      }, React.createElement(\"div\", {\n        className: \"\".concat(baseCls, \"-block\"),\n        style: {\n          backgroundColor: disabled ? '#c4c4c4' : colorStr\n        }\n      })));\n    }\n  }]);\n\n  return ColorPicker;\n}(React.Component);\n\n(function (ColorPicker) {\n  ColorPicker.defaultProps = {\n    prefixCls: 'x6',\n    color: '#1890FF'\n  };\n})(ColorPicker || (ColorPicker = {}));","map":null,"metadata":{},"sourceType":"module"}