{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { HOME_POST_CENSUS_TRACT_FILTER_BEGIN, HOME_POST_CENSUS_TRACT_FILTER_SUCCESS, HOME_POST_CENSUS_TRACT_FILTER_FAILURE, HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR } from './constants';\nimport Axios from 'axios';\nexport function postCensusTractFilter(payload) {\n  return function (dispatch) {\n    // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_POST_CENSUS_TRACT_FILTER_BEGIN\n    });\n    var mockData = {\n      state: 'state1',\n      county: 'county1',\n      Census_Tract: 'Census_Tract',\n      Population: 0,\n      Climate_Risk_Score: 0,\n      Social_Vulnerability_Score: 0,\n      Community_Resilience_Score: 0,\n      Median_Individual_Income: 0,\n      Sex_Ratio: [{\n        sex: \"female\",\n        ratio: 0.5\n      }, {\n        sex: \"make\",\n        ratio: 0.5\n      }],\n      Age: [{\n        age: \"10\",\n        ratio: 0.5\n      }, {\n        age: \"20\",\n        ratio: 0.5\n      }],\n      Education: [{\n        type: \"1\",\n        ratio: 0.5\n      }, {\n        type: \"2\",\n        ratio: 0.5\n      }],\n      Income: [{\n        type: \"1\",\n        ratio: 0.5\n      }, {\n        type: \"2\",\n        ratio: 0.5\n      }]\n    };\n    Axios.defaults.baseURL = 'http://127.0.0.1:8080';\n    var url = \"/CensusTractFilter\";\n    return Axios(url, {\n      method: 'post',\n      responseType: 'json',\n      data: payload\n    }).then(function (res) {\n      var data = res.data,\n          headers = res.headers;\n      dispatch({\n        type: HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n        data: data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n        data: mockData\n      }); // message.error(\"failed to download\")\n    });\n  };\n}\nexport function dismissPostCensusTractFilterError() {\n  return {\n    type: HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR\n  };\n}\nexport function usePostCensusTractFilter() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postCensusTractFilterPending: state.home.postCensusTractFilterPending,\n      postCensusTractFilterError: state.home.postCensusTractFilterError\n    };\n  }, shallowEqual),\n      postCensusTractFilterPending = _useSelector.postCensusTractFilterPending,\n      postCensusTractFilterError = _useSelector.postCensusTractFilterError;\n\n  var boundAction = useCallback(function () {\n    return dispatch(postCensusTractFilter.apply(void 0, arguments));\n  }, [dispatch]);\n  var boundDismissError = useCallback(function () {\n    return dispatch(dismissPostCensusTractFilterError());\n  }, [dispatch]);\n  return {\n    postCensusTractFilter: boundAction,\n    postCensusTractFilterPending: postCensusTractFilterPending,\n    postCensusTractFilterError: postCensusTractFilterError,\n    dismissPostCensusTractFilterError: boundDismissError\n  };\n}\n\n__signature__(usePostCensusTractFilter, \"useDispatch{dispatch}\\nuseSelector{{ postCensusTractFilterPending, postCensusTractFilterError }}\\nuseCallback{boundAction}\\nuseCallback{boundDismissError}\", function () {\n  return [useDispatch, useSelector];\n});\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_POST_CENSUS_TRACT_FILTER_BEGIN:\n      // Just after a request is sent\n      return _objectSpread({}, state, {\n        postCensusTractFilterPending: true,\n        postCensusTractFilterError: null\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_SUCCESS:\n      // The request is success\n      return _objectSpread({}, state, {\n        censusTractFilterResult: action.data,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: null\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_FAILURE:\n      // The request is failed\n      return _objectSpread({}, state, {\n        censusTractFilterResult: action.data,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: action.data.error\n      });\n\n    case HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return _objectSpread({}, state, {\n        postCensusTractFilterError: null\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(postCensusTractFilter, \"postCensusTractFilter\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(dismissPostCensusTractFilterError, \"dismissPostCensusTractFilterError\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(usePostCensusTractFilter, \"usePostCensusTractFilter\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/src/features/home/redux/postCensusTractFilter.js"],"names":["useEffect","useCallback","useDispatch","useSelector","shallowEqual","HOME_POST_CENSUS_TRACT_FILTER_BEGIN","HOME_POST_CENSUS_TRACT_FILTER_SUCCESS","HOME_POST_CENSUS_TRACT_FILTER_FAILURE","HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR","Axios","postCensusTractFilter","payload","dispatch","type","mockData","state","county","Census_Tract","Population","Climate_Risk_Score","Social_Vulnerability_Score","Community_Resilience_Score","Median_Individual_Income","Sex_Ratio","sex","ratio","Age","age","Education","Income","defaults","baseURL","url","method","responseType","data","then","res","headers","catch","err","dismissPostCensusTractFilterError","usePostCensusTractFilter","postCensusTractFilterPending","home","postCensusTractFilterError","boundAction","boundDismissError","reducer","action","censusTractFilterResult","error"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  HOME_POST_CENSUS_TRACT_FILTER_BEGIN,\n  HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n  HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n  HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR,\n} from './constants';\nimport Axios from 'axios';\n\nexport function postCensusTractFilter(payload) {\n  return (dispatch) => { // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_POST_CENSUS_TRACT_FILTER_BEGIN,\n    });\n\n    const mockData = {\n      state: 'state1',\n      county: 'county1',\n      Census_Tract: 'Census_Tract',\n      Population: 0,\n      Climate_Risk_Score: 0,\n      Social_Vulnerability_Score: 0,\n      Community_Resilience_Score: 0,\n      Median_Individual_Income: 0,\n      Sex_Ratio: [\n        {\n          sex: \"female\",\n          ratio: 0.5\n        },\n        {\n          sex: \"make\",\n          ratio: 0.5\n        }\n      ],\n      Age: [\n        {\n          age: \"10\",\n          ratio: 0.5\n        },\n        {\n          age: \"20\",\n          ratio: 0.5\n        }\n      ],\n      Education: [\n        {\n          type: \"1\",\n          ratio: 0.5\n        },\n        {\n          type: \"2\",\n          ratio: 0.5\n        }\n      ],\n      Income: [\n        {\n          type: \"1\",\n          ratio: 0.5\n        },\n        {\n          type: \"2\",\n          ratio: 0.5\n        }\n      ]\n    };\n\n    Axios.defaults.baseURL = 'http://127.0.0.1:8080';\n    const url = `/CensusTractFilter`;\n    return Axios(url, {\n      method: 'post',\n      responseType: 'json',\n      data: payload,\n    })\n      .then(res => {\n        const { data, headers } = res;\n        dispatch({\n          type: HOME_POST_CENSUS_TRACT_FILTER_SUCCESS,\n          data: data,\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: HOME_POST_CENSUS_TRACT_FILTER_FAILURE,\n          data: mockData,\n        });\n        // message.error(\"failed to download\")\n      });\n  };\n}\n\nexport function dismissPostCensusTractFilterError() {\n  return {\n    type: HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR,\n  };\n}\n\nexport function usePostCensusTractFilter() {\n  const dispatch = useDispatch();\n\n  const { postCensusTractFilterPending, postCensusTractFilterError } = useSelector(\n    state => ({\n      postCensusTractFilterPending: state.home.postCensusTractFilterPending,\n      postCensusTractFilterError: state.home.postCensusTractFilterError,\n    }),\n    shallowEqual,\n  );\n\n  const boundAction = useCallback((...args) => {\n    return dispatch(postCensusTractFilter(...args));\n  }, [dispatch]);\n\n  const boundDismissError = useCallback(() => {\n    return dispatch(dismissPostCensusTractFilterError());\n  }, [dispatch]);\n\n  return {\n    postCensusTractFilter: boundAction,\n    postCensusTractFilterPending,\n    postCensusTractFilterError,\n    dismissPostCensusTractFilterError: boundDismissError,\n  };\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_POST_CENSUS_TRACT_FILTER_BEGIN:\n      // Just after a request is sent\n      return {\n        ...state,\n        postCensusTractFilterPending: true,\n        postCensusTractFilterError: null,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_SUCCESS:\n      // The request is success\n      return {\n        ...state,\n        censusTractFilterResult: action.data,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: null,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_FAILURE:\n      // The request is failed\n      return {\n        ...state,\n        censusTractFilterResult: action.data,\n        postCensusTractFilterPending: false,\n        postCensusTractFilterError: action.data.error,\n      };\n\n    case HOME_POST_CENSUS_TRACT_FILTER_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return {\n        ...state,\n        postCensusTractFilterError: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}