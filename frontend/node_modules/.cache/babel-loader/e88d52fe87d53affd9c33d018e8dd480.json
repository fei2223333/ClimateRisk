{"ast":null,"code":"import { Point } from '../../geometry';\nimport { toResult } from './util';\nexport var radial = function radial(portPosition, elemBBox, args) {\n  return radialLayout(portPosition.diff(elemBBox.getCenter()), false, args);\n};\nexport var radialOriented = function radialOriented(portPosition, elemBBox, args) {\n  return radialLayout(portPosition.diff(elemBBox.getCenter()), true, args);\n};\n\nfunction radialLayout(portCenterOffset, autoOrient, args) {\n  var offset = args.offset != null ? args.offset : 20;\n  var origin = new Point(0, 0);\n  var angle = -portCenterOffset.theta(origin);\n  var pos = portCenterOffset.clone().move(origin, offset).diff(portCenterOffset).round();\n  var y = '.3em';\n  var textAnchor;\n  var orientAngle = angle;\n\n  if ((angle + 90) % 180 === 0) {\n    textAnchor = autoOrient ? 'end' : 'middle';\n\n    if (!autoOrient && angle === -270) {\n      y = '0em';\n    }\n  } else if (angle > -270 && angle < -90) {\n    textAnchor = 'start';\n    orientAngle = angle - 180;\n  } else {\n    textAnchor = 'end';\n  }\n\n  return toResult({\n    position: pos.round().toJSON(),\n    angle: autoOrient ? orientAngle : 0,\n    attrs: {\n      '.': {\n        y: y,\n        'text-anchor': textAnchor\n      }\n    }\n  }, args);\n}","map":null,"metadata":{},"sourceType":"module"}