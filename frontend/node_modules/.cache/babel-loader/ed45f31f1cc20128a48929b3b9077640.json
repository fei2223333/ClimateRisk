{"ast":null,"code":"import _defineProperty from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/diagpanel2/ServiceWebsite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events  */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarContext } from './context';\nvar cacheDeactiveMap = new WeakMap();\n\nvar MenubarItemInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MenubarItemInner, _React$PureComponent);\n\n  function MenubarItemInner(props) {\n    var _this;\n\n    _classCallCheck(this, MenubarItemInner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenubarItemInner).call(this, props));\n\n    _this.onDocumentClick = function () {\n      _this.deactive();\n    };\n\n    _this.onClick = function (e) {\n      _this.props.context.activeMenubar();\n\n      _this.removeDeactive(e.currentTarget.parentElement);\n\n      _this.active();\n    };\n\n    _this.onMouseEnter = function (e) {\n      if (_this.props.context.menubarActived && !_this.state.active && !_this.isPrevMenuHiddening(e)) {\n        var currentTarget = e.currentTarget;\n        var childNodes = currentTarget.parentElement.childNodes;\n        childNodes.forEach(function (child) {\n          if (child === currentTarget) {\n            _this.removeDeactive(child);\n          } else {\n            _this.callDeactive(child);\n          }\n        });\n\n        _this.active();\n      }\n    };\n\n    _this.onMouseLeave = function (e) {\n      var relatedTarget = e.relatedTarget;\n      var currentTarget = e.currentTarget;\n\n      if (_this.props.context.menubarActived && _this.state.active) {\n        var childNodes = currentTarget.parentElement.childNodes;\n        var shoudDeactive = false;\n\n        if (relatedTarget !== window) {\n          for (var i = 0, l = childNodes.length; i < l; i += 1) {\n            var child = childNodes[i];\n\n            if (child === relatedTarget || child.contains(relatedTarget)) {\n              shoudDeactive = true;\n              break;\n            }\n          }\n        }\n\n        if (shoudDeactive) {\n          _this.deactive();\n        } else {\n          // 缓存一下，当再次 hover 到其他菜单时被调用\n          _this.cacheDeactive(currentTarget);\n        }\n      }\n    };\n\n    _this.active = function () {\n      _this.setState({\n        active: true\n      });\n\n      if (!_this.removeDocClickEvent) {\n        _this.removeDocClickEvent = addEventListener(document.documentElement, 'click', _this.onDocumentClick).remove;\n      }\n    };\n\n    _this.deactive = function () {\n      _this.setState({\n        active: false\n      });\n\n      if (_this.removeDocClickEvent) {\n        _this.removeDocClickEvent();\n\n        _this.removeDocClickEvent = null;\n      }\n    };\n\n    _this.popupClassName = \"\".concat(props.context.prefixCls, \"-item-dropdown\");\n    _this.state = {\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(MenubarItemInner, [{\n    key: \"isPrevMenuHiddening\",\n    value: function isPrevMenuHiddening(e) {\n      var toElement = e.nativeEvent.toElement;\n\n      if (toElement && toElement.className === this.popupClassName) {\n        return true;\n      }\n\n      var currentTarget = e.currentTarget;\n      var childNodes = currentTarget.parentElement.childNodes;\n\n      for (var i = 0, l = childNodes.length; i < l; i += 1) {\n        var child = childNodes[i];\n        var popupElem = child.querySelector(\".\".concat(this.popupClassName));\n\n        if (popupElem.contains(toElement)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"cacheDeactive\",\n    value: function cacheDeactive(elem) {\n      cacheDeactiveMap.set(elem, this.deactive);\n    }\n  }, {\n    key: \"callDeactive\",\n    value: function callDeactive(elem) {\n      if (cacheDeactiveMap.has(elem)) {\n        cacheDeactiveMap.get(elem)();\n        cacheDeactiveMap.delete(elem);\n      }\n    }\n  }, {\n    key: \"removeDeactive\",\n    value: function removeDeactive(elem) {\n      cacheDeactiveMap.delete(elem);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classnames;\n\n      var _this$props = this.props,\n          text = _this$props.text,\n          children = _this$props.children,\n          hidden = _this$props.hidden;\n      var _this$props$context = this.props.context,\n          prefixCls = _this$props$context.prefixCls,\n          menubarActived = _this$props$context.menubarActived;\n      var currentMenuActived = menubarActived && this.state.active;\n      var baseCls = \"\".concat(prefixCls, \"-item\");\n      return React.createElement(\"div\", {\n        className: classnames(baseCls, (_classnames = {}, _defineProperty(_classnames, \"\".concat(baseCls, \"-hidden\"), hidden), _defineProperty(_classnames, \"\".concat(baseCls, \"-hover\"), menubarActived), _defineProperty(_classnames, \"\".concat(baseCls, \"-active\"), currentMenuActived), _classnames)),\n        onMouseEnter: this.onMouseEnter,\n        onMouseLeave: this.onMouseLeave\n      }, React.createElement(\"div\", {\n        className: classnames(\"\".concat(baseCls, \"-text\"), _defineProperty({}, \"\".concat(baseCls, \"-text-active\"), currentMenuActived)),\n        onClick: this.onClick\n      }, text), React.createElement(\"div\", {\n        className: this.popupClassName\n      }, children));\n    }\n  }]);\n\n  return MenubarItemInner;\n}(React.PureComponent);\n\nexport var MenubarItem = function MenubarItem(props) {\n  return React.createElement(MenubarContext.Consumer, null, function (context) {\n    return React.createElement(MenubarItemInner, Object.assign({\n      context: context\n    }, props));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}