{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/**\n * @fileOverview Force Layout Grid Align layout\n * @author wenyanqi\n */\nimport { Base } from \"../base\";\nimport layout from './core';\nexport var ERLayout = /*#__PURE__*/function (_Base) {\n  _inherits(ERLayout, _Base);\n\n  function ERLayout(options) {\n    var _this;\n\n    _classCallCheck(this, ERLayout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ERLayout).call(this));\n    _this.width = 300;\n    _this.height = 300;\n    _this.nodeMinGap = 50;\n    /** 迭代结束的回调函数 */\n\n    _this.onLayoutEnd = function () {};\n\n    if (options) {\n      _this.updateCfg(options);\n    }\n\n    return _this;\n  }\n\n  _createClass(ERLayout, [{\n    key: \"getDefaultCfg\",\n    value: function getDefaultCfg() {\n      return {\n        width: 300,\n        height: 300,\n        nodeMinGap: 50\n      };\n    }\n    /**\n     * 执行布局\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var self = this;\n      var nodes = self.nodes;\n      var edges = self.edges; // 节点初始化，size初始化\n\n      nodes === null || nodes === void 0 ? void 0 : nodes.forEach(function (node) {\n        if (!node.size) {\n          node.size = [50, 50];\n        }\n      });\n      return layout({\n        nodes: nodes,\n        edges: edges\n      }, {\n        width: this.width,\n        height: this.height,\n        nodeMinGap: this.nodeMinGap\n      }).then(function () {\n        if (self.onLayoutEnd) self.onLayoutEnd();\n      });\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return \"er\";\n    }\n  }]);\n\n  return ERLayout;\n}(Base);","map":null,"metadata":{},"sourceType":"module"}