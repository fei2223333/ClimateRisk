{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport Mousetrap from 'mousetrap';\nimport { Dom, FunctionExt } from '../util';\nimport { Disposable } from '../common';\nexport var Keyboard = /*#__PURE__*/function (_Disposable) {\n  _inherits(Keyboard, _Disposable);\n\n  function Keyboard(options) {\n    var _this;\n\n    _classCallCheck(this, Keyboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyboard).call(this));\n    _this.options = options;\n    var scroller = _this.graph.scroller.widget;\n    _this.container = scroller ? scroller.container : _this.graph.container;\n\n    if (options.global) {\n      _this.target = document;\n    } else {\n      _this.target = _this.container;\n\n      if (!_this.disabled) {\n        // ensure the container focusable\n        _this.target.setAttribute('tabindex', '-1');\n      } // change to mouseup eventï¼Œprevent page stalling caused by focus\n\n\n      _this.graph.on('cell:mouseup', _this.focus, _assertThisInitialized(_assertThisInitialized(_this)));\n\n      _this.graph.on('blank:mouseup', _this.focus, _assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    _this.mousetrap = Keyboard.createMousetrap(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Keyboard, [{\n    key: \"enable\",\n    value: function enable() {\n      if (this.disabled) {\n        this.options.enabled = true;\n        this.graph.options.keyboard.enabled = true;\n\n        if (this.target instanceof HTMLElement) {\n          this.target.setAttribute('tabindex', '-1');\n        }\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.disabled) {\n        this.options.enabled = false;\n        this.graph.options.keyboard.enabled = false;\n\n        if (this.target instanceof HTMLElement) {\n          this.target.removeAttribute('tabindex');\n        }\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(keys, callback, action) {\n      this.mousetrap.bind(this.getKeys(keys), callback, action);\n    }\n  }, {\n    key: \"off\",\n    value: function off(keys, action) {\n      this.mousetrap.unbind(this.getKeys(keys), action);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(e) {\n      var isInputEvent = this.isInputEvent(e.e);\n\n      if (isInputEvent) {\n        return;\n      }\n\n      var target = this.target;\n      target.focus({\n        preventScroll: true\n      });\n    }\n  }, {\n    key: \"getKeys\",\n    value: function getKeys(keys) {\n      var _this2 = this;\n\n      return (Array.isArray(keys) ? keys : [keys]).map(function (key) {\n        return _this2.formatkey(key);\n      });\n    }\n  }, {\n    key: \"formatkey\",\n    value: function formatkey(key) {\n      var formated = key.toLowerCase().replace(/\\s/g, '').replace('delete', 'del').replace('cmd', 'command');\n      var formatFn = this.options.format;\n\n      if (formatFn) {\n        return FunctionExt.call(formatFn, this.graph, formated);\n      }\n\n      return formated;\n    }\n  }, {\n    key: \"isGraphEvent\",\n    value: function isGraphEvent(e) {\n      var target = e.srcElement || e.target;\n\n      if (target) {\n        if (target === this.target || target === document.body) {\n          return true;\n        }\n\n        return Dom.contains(this.container, target);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isInputEvent\",\n    value: function isInputEvent(e) {\n      var target = e.target;\n      var tagName = target && target.tagName.toLowerCase();\n      return tagName === 'input';\n    }\n  }, {\n    key: \"isEnabledForEvent\",\n    value: function isEnabledForEvent(e) {\n      var allowed = !this.disabled && this.isGraphEvent(e);\n      var isInputEvent = this.isInputEvent(e);\n\n      if (allowed) {\n        var code = e.keyCode || e.which;\n\n        if (isInputEvent && (code === 8 || code === 46)) {\n          return false;\n        }\n\n        if (this.options.guard) {\n          return FunctionExt.call(this.options.guard, this.graph, e);\n        }\n      }\n\n      return allowed;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.mousetrap.reset();\n    }\n  }, {\n    key: \"graph\",\n    get: function get() {\n      return this.options.graph;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.options.enabled !== true;\n    }\n  }]);\n\n  return Keyboard;\n}(Disposable);\n\n__decorate([Disposable.dispose()], Keyboard.prototype, \"dispose\", null);\n\n(function (Keyboard) {\n  function createMousetrap(keyboard) {\n    var mousetrap = new Mousetrap(keyboard.target);\n    var stopCallback = mousetrap.stopCallback;\n\n    mousetrap.stopCallback = function (e, elem, combo) {\n      if (keyboard.isEnabledForEvent(e)) {\n        if (stopCallback) {\n          return stopCallback.call(mousetrap, e, elem, combo);\n        }\n\n        return false;\n      }\n\n      return true;\n    };\n\n    return mousetrap;\n  }\n\n  Keyboard.createMousetrap = createMousetrap;\n})(Keyboard || (Keyboard = {}));","map":null,"metadata":{},"sourceType":"module"}