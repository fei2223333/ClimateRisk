{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __awaiter } from \"tslib\";\nimport { useXFlowApp, createComponentModel, DisposableCollection } from '@antv/xflow-core';\nimport React from 'react';\nexport var useToolbarModel = function useToolbarModel(props) {\n  var config = props.config;\n  var modelId = config.moduleId;\n  var app = useXFlowApp();\n\n  var _createComponentModel = createComponentModel({\n    name: modelId,\n    layout: props.layout,\n    mainGroups: [],\n    extraGroups: [],\n    customRender: null\n  }),\n      _createComponentModel2 = _slicedToArray(_createComponentModel, 4),\n      state = _createComponentModel2[0],\n      setState = _createComponentModel2[1],\n      toolbarModel = _createComponentModel2[2],\n      isModelReady = _createComponentModel2[3];\n  /** 注册全局的model */\n\n\n  React.useEffect(function () {\n    var toDispose = new DisposableCollection();\n    var deferredModel = app.modelService.findDeferredModel(modelId);\n\n    if (!deferredModel) {\n      var _config$getConfig = config.getConfig(),\n          toolbarCustomRender = _config$getConfig.toolbarCustomRender,\n          toolbarModelService = _config$getConfig.toolbarModelService;\n\n      var d = app.modelService.registerModel({\n        id: modelId,\n        modelFactory: function modelFactory() {\n          return toolbarModel;\n        },\n        watchChange: function watchChange(self) {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var updateCustomRender;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!toolbarModelService) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return toolbarModelService(self, app.modelService, toDispose);\n\n                  case 3:\n                    if (!toolbarCustomRender) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    updateCustomRender = function updateCustomRender(customRender) {\n                      self.setValue(function (m) {\n                        return m.customRender = customRender;\n                      });\n                    };\n\n                    _context.next = 7;\n                    return toolbarCustomRender(app.modelService, updateCustomRender);\n\n                  case 7:\n                    return _context.abrupt(\"return\", toDispose);\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      });\n      toDispose.push(d);\n    }\n\n    return function () {\n      toDispose.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return {\n    isModelReady: isModelReady,\n    state: state,\n    setState: setState,\n    toolbarModel: toolbarModel\n  };\n};","map":null,"metadata":{},"sourceType":"module"}