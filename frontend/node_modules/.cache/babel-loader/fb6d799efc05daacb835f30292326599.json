{"ast":null,"code":"import React from 'react';\nimport { createPath } from '../../utils';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING, DefaultNodeConfig } from '../../constants';\nexport var InternalStorageNode = function InternalStorageNode(props) {\n  var _props$size = props.size,\n      size = _props$size === void 0 ? {\n    width: NODE_WIDTH,\n    height: NODE_HEIGHT\n  } : _props$size,\n      _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data;\n  var _data$stroke = data.stroke,\n      stroke = _data$stroke === void 0 ? DefaultNodeConfig.stroke : _data$stroke,\n      _data$label = data.label,\n      label = _data$label === void 0 ? DefaultNodeConfig.label : _data$label,\n      _data$fill = data.fill,\n      fill = _data$fill === void 0 ? DefaultNodeConfig.fill : _data$fill,\n      _data$fontFill = data.fontFill,\n      fontFill = _data$fontFill === void 0 ? DefaultNodeConfig.fontFill : _data$fontFill,\n      _data$fontSize = data.fontSize,\n      fontSize = _data$fontSize === void 0 ? DefaultNodeConfig.fontSize : _data$fontSize;\n  var width = size.width,\n      height = size.height;\n  var availableWidth = width - 2 * NODE_PADDING;\n  var availableHieght = height - 2 * NODE_PADDING;\n  var rx = 6;\n  var path = [['M', NODE_PADDING, NODE_PADDING], ['L', availableWidth - rx, NODE_PADDING], ['C', availableWidth, NODE_PADDING, availableWidth, rx], ['', availableWidth, height / 2], ['L', availableWidth, availableHieght - rx], ['C', availableWidth, availableHieght, availableWidth - rx, availableHieght], ['', availableWidth - rx, availableHieght], ['L', rx, availableHieght], ['C', NODE_PADDING, availableHieght, NODE_PADDING, availableHieght - rx], ['', NODE_PADDING, availableHieght - rx], ['Z']];\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    // viewBox={`0 0 40 30`}\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\"\n  }, React.createElement(\"path\", {\n    d: createPath(path),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"path\", {\n    d: \"M \".concat(NODE_PADDING, \",\").concat(rx, \" L \").concat(availableWidth - 1, \" \").concat(rx, \" \"),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"path\", {\n    d: \"M \".concat(rx, \",\").concat(NODE_PADDING, \" L \").concat(rx, \" \").concat(availableHieght, \" \"),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"text\", {\n    x: width / 2,\n    y: height / 2,\n    fill: fontFill,\n    textAnchor: \"middle\",\n    alignmentBaseline: \"middle\",\n    fontSize: fontSize\n  }, label), \"Sorry, your browser does not support inline SVG.\");\n};","map":null,"metadata":{},"sourceType":"module"}