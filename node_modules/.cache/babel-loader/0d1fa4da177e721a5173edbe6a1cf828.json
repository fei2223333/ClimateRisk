{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { AbstractMatrix } from '../matrix';\n\nvar WrapperMatrix1D = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(WrapperMatrix1D, _AbstractMatrix);\n\n  function WrapperMatrix1D(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, WrapperMatrix1D);\n\n    var _options$rows = options.rows,\n        rows = _options$rows === void 0 ? 1 : _options$rows;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WrapperMatrix1D).call(this));\n    _this.rows = rows;\n    _this.columns = data.length / rows;\n    _this.data = data;\n    return _this;\n  }\n\n  _createClass(WrapperMatrix1D, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      var index = this._calculateIndex(rowIndex, columnIndex);\n\n      this.data[index] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      var index = this._calculateIndex(rowIndex, columnIndex);\n\n      return this.data[index];\n    }\n  }, {\n    key: \"_calculateIndex\",\n    value: function _calculateIndex(row, column) {\n      return row * this.columns + column;\n    }\n  }]);\n\n  return WrapperMatrix1D;\n}(AbstractMatrix);\n\nexport { WrapperMatrix1D as default };","map":null,"metadata":{},"sourceType":"module"}