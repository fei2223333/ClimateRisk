{"ast":null,"code":"import _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// eslint-disable-next-line\nexport var ModifierKey;\n\n(function (ModifierKey) {\n  function parse(modifiers) {\n    var or = [];\n    var and = [];\n\n    if (Array.isArray(modifiers)) {\n      or.push.apply(or, _toConsumableArray(modifiers));\n    } else {\n      modifiers.split('|').forEach(function (item) {\n        if (item.indexOf('&') === -1) {\n          or.push(item);\n        } else {\n          and.push.apply(and, _toConsumableArray(item.split('&')));\n        }\n      });\n    }\n\n    return {\n      or: or,\n      and: and\n    };\n  }\n\n  ModifierKey.parse = parse;\n\n  function equals(modifiers1, modifiers2) {\n    if (modifiers1 != null && modifiers2 != null) {\n      var m1 = parse(modifiers1);\n      var m2 = parse(modifiers2);\n      var or1 = m1.or.sort();\n      var or2 = m2.or.sort();\n      var and1 = m1.and.sort();\n      var and2 = m2.and.sort();\n\n      var equal = function equal(a1, a2) {\n        return a1.length === a2.length && (a1.length === 0 || a1.every(function (a, i) {\n          return a === a2[i];\n        }));\n      };\n\n      return equal(or1, or2) && equal(and1, and2);\n    }\n\n    if (modifiers1 == null && modifiers2 == null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  ModifierKey.equals = equals;\n\n  function isMatch(e, modifiers, strict) {\n    if (modifiers == null || Array.isArray(modifiers) && modifiers.length === 0) {\n      return strict ? e.altKey !== true && e.ctrlKey !== true && e.metaKey !== true && e.shiftKey !== true : true;\n    }\n\n    var _parse = parse(modifiers),\n        or = _parse.or,\n        and = _parse.and;\n\n    var match = function match(key) {\n      var name = \"\".concat(key.toLowerCase(), \"Key\");\n      return e[name] === true;\n    };\n\n    return or.some(function (key) {\n      return match(key);\n    }) && and.every(function (key) {\n      return match(key);\n    });\n  }\n\n  ModifierKey.isMatch = isMatch;\n})(ModifierKey || (ModifierKey = {}));","map":null,"metadata":{},"sourceType":"module"}