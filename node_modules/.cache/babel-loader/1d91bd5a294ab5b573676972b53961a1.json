{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport { Upload, message, Button } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport TemplateChart from './TemplateChart';\nimport '../../styles/SpineContent.less';\nvar Dragger = Upload.Dragger;\nexport var SpineContent = /*#__PURE__*/function (_Component) {\n  _inherits(SpineContent, _Component);\n\n  function SpineContent(props) {\n    var _this;\n\n    _classCallCheck(this, SpineContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpineContent).call(this, props));\n\n    _this.handleFileChange = function (_ref) {\n      var file = _ref.file,\n          fileList = _ref.fileList;\n      //处理文件change，保证用户选择的文件只有一个\n      var status = file.status;\n\n      if (status !== 'uploading') {\n        console.log(file, fileList);\n      }\n\n      if (file.size / 1024 / 1024 > 50) {\n        message.error(\"\".concat(file.name, \" has exceeded 50 MB.\"));\n        return;\n      }\n\n      if (status === 'done') {\n        message.success(\"\".concat(file.name, \" file uploaded successfully.\"));\n      } else if (status === 'error') {\n        message.error(\"\".concat(file.name, \" file upload failed.\"));\n      }\n    };\n\n    _this.handleUpload = function () {\n      if (!_this.state.fileList.length) {\n        message.warning('请选择要上传的文件');\n      }\n\n      var formData = new FormData();\n      formData.append('file', _this.state.fileList[0].originFileObj);\n\n      _this.props.actions.uploadFile(formData);\n    };\n\n    _this.state = {\n      showModal: false,\n      fileList: [] //文件列表，用于控制upload组件\n\n    };\n    return _this;\n  }\n\n  _createClass(SpineContent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dragger, {\n        name: \"file\",\n        multiple: false,\n        action: \"\",\n        beforeUpload: function beforeUpload(f, fList) {\n          fList = fList.slice(-1);\n        },\n        onChange: this.handleFileChange,\n        accept: \".csv, .xls, .xlsx\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(InboxOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Supported file format: csv, excel. File size cannot exceed 50MB.\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: this.state.fileList.length === 0,\n        loading: this.props.home.isUploading,\n        size: \"large\",\n        style: {\n          marginTop: 16,\n          marginLeft: \"47%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, this.props.home.isUploading ? 'Uploading' : 'Start Upload'), /*#__PURE__*/React.createElement(TemplateChart, {\n        data: this.props.home.parsedData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }));\n    } // render() {\n    //   const fileList = this.state.fileList;\n    //   const uploading = this.state.uploading;\n    //   return (\n    //     <div>\n    //       <Upload\n    //         fileList={this.state.fileList}\n    //         beforeUpload={(f, fList) => false}\n    //         onChange={this.handleFileChange}\n    //       >\n    //         <Button>\n    //           <CloudUploadOutlined /> 选择文件\n    //         </Button>\n    //       </Upload>\n    //       <Button\n    //         type=\"primary\"\n    //         onClick={this.handleUpload}\n    //         disabled={fileList.length === 0}\n    //         loading={uploading}\n    //         style={{ marginTop: 16 }}\n    //       >\n    //         {uploading ? 'Uploading' : 'Start Upload'}\n    //       </Button>\n    //     </div>\n    //   );\n    // }\n\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return SpineContent;\n}(Component);\n/* istanbul ignore next */\n\nSpineContent.propTypes = {\n  home: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    home: state.home\n  };\n}\n/* istanbul ignore next */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_objectSpread({}, actions), dispatch)\n  };\n}\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(SpineContent);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dragger, \"Dragger\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(SpineContent, \"SpineContent\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/SpineContent.js"],"names":["React","Component","PropTypes","bindActionCreators","connect","actions","Upload","message","Button","InboxOutlined","TemplateChart","Dragger","SpineContent","props","handleFileChange","file","fileList","status","console","log","size","error","name","success","handleUpload","state","length","warning","formData","FormData","append","originFileObj","uploadFile","showModal","f","fList","slice","home","isUploading","marginTop","marginLeft","parsedData","propTypes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport { Upload, message, Button } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport TemplateChart from './TemplateChart';\nimport '../../styles/SpineContent.less';\n\nconst { Dragger } = Upload;\n\n\nexport class SpineContent extends Component {\n  static propTypes = {\n    home: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      fileList: [], //文件列表，用于控制upload组件\n    };\n  }\n\n  handleFileChange = ({ file, fileList }) => {\n    //处理文件change，保证用户选择的文件只有一个\n    const { status } = file;\n    if (status !== 'uploading') {\n      console.log(file, fileList);\n    }\n    if(file.size/1024/1024>50){\n      message.error(`${file.name} has exceeded 50 MB.`)\n      return;\n    }\n    if (status === 'done') {\n      message.success(`${file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${file.name} file upload failed.`);\n    }\n  };\n\n  handleUpload = () => {\n    if (!this.state.fileList.length) {\n      message.warning('请选择要上传的文件');\n    }\n\n    const formData = new FormData();\n    formData.append('file', this.state.fileList[0].originFileObj);\n\n    this.props.actions.uploadFile(formData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Dragger\n          name=\"file\"\n          multiple={false}\n          action=\"\"\n          beforeUpload={(f, fList) => {\n            fList = fList.slice(-1);\n          }}\n          onChange={this.handleFileChange}\n          accept=\".csv, .xls, .xlsx\"\n\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n          <p className=\"ant-upload-hint\">\n            Supported file format: csv, excel. File size cannot exceed 50MB.\n          </p>\n        </Dragger>\n        <Button\n          type=\"primary\"\n          onClick={this.handleUpload}\n          disabled={this.state.fileList.length === 0}\n          loading={this.props.home.isUploading}\n          size=\"large\"\n          style={{ marginTop: 16, marginLeft: \"47%\"\n }}\n        >\n          {this.props.home.isUploading ? 'Uploading' : 'Start Upload'}\n        </Button>\n        <TemplateChart  data={this.props.home.parsedData}/>\n      </div>\n    );\n  }\n\n  // render() {\n  //   const fileList = this.state.fileList;\n  //   const uploading = this.state.uploading;\n  //   return (\n  //     <div>\n  //       <Upload\n  //         fileList={this.state.fileList}\n  //         beforeUpload={(f, fList) => false}\n  //         onChange={this.handleFileChange}\n  //       >\n  //         <Button>\n  //           <CloudUploadOutlined /> 选择文件\n  //         </Button>\n  //       </Upload>\n  //       <Button\n  //         type=\"primary\"\n  //         onClick={this.handleUpload}\n  //         disabled={fileList.length === 0}\n  //         loading={uploading}\n  //         style={{ marginTop: 16 }}\n  //       >\n  //         {uploading ? 'Uploading' : 'Start Upload'}\n  //       </Button>\n  //     </div>\n  //   );\n  // }\n}\n\n/* istanbul ignore next */\nfunction mapStateToProps(state) {\n  return {\n    home: state.home,\n  };\n}\n\n/* istanbul ignore next */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...actions }, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SpineContent);\n"]},"metadata":{},"sourceType":"module"}