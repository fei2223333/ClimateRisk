{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { NumberExt, Dom } from '../../util';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport var Boundary = /*#__PURE__*/function (_ToolsView$ToolItem) {\n  _inherits(Boundary, _ToolsView$ToolItem);\n\n  function Boundary() {\n    _classCallCheck(this, Boundary);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Boundary).apply(this, arguments));\n  }\n\n  _createClass(Boundary, [{\n    key: \"onRender\",\n    value: function onRender() {\n      Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'));\n\n      if (this.options.attrs) {\n        var _a = this.options.attrs,\n            className = _a.class,\n            attrs = __rest(_a, [\"class\"]);\n\n        Dom.attr(this.container, Dom.kebablizeAttrs(attrs));\n\n        if (className) {\n          Dom.addClass(this.container, className);\n        }\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var view = this.cellView;\n      var options = this.options;\n      var useCellGeometry = options.useCellGeometry,\n          rotate = options.rotate;\n      var padding = NumberExt.normalizeSides(options.padding);\n      var bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n        x: -padding.left,\n        y: -padding.top,\n        width: padding.left + padding.right,\n        height: padding.top + padding.bottom\n      });\n      var cell = view.cell;\n\n      if (cell.isNode()) {\n        var angle = cell.getAngle();\n\n        if (angle) {\n          if (rotate) {\n            var origin = cell.getBBox().getCenter();\n            Dom.rotate(this.container, angle, origin.x, origin.y, {\n              absolute: true\n            });\n          } else {\n            bbox = bbox.bbox(angle);\n          }\n        }\n      }\n\n      Dom.attr(this.container, bbox.toJSON());\n      return this;\n    }\n  }]);\n\n  return Boundary;\n}(ToolsView.ToolItem);\n\n(function (Boundary) {\n  Boundary.config({\n    name: 'boundary',\n    tagName: 'rect',\n    padding: 10,\n    attrs: {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none'\n    }\n  });\n})(Boundary || (Boundary = {}));","map":null,"metadata":{},"sourceType":"module"}