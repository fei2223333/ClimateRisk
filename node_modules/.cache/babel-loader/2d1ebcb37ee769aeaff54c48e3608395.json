{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nimport 'reflect-metadata';\nimport { Contribution, Module, Syringe } from 'mana-syringe';\nimport { ModelRegistry } from './model-registry';\n/**  model service 扩展  */\n\nimport { IModelContribution, IModelOptionProvider } from './interface';\nimport { CommandModelContribution } from './contributions/command-model';\nimport { GraphModelContribution } from './contributions/graph-model';\n/** 模块 */\n\nexport var modelServiceModule = Module(function (register) {\n  /** 注册 IModelService Contribution */\n  Contribution.register(register, IModelContribution);\n  /** 注册 ModelRegistry 到 IFrontendApplicationContribution  */\n\n  /** 注册 ModelRegistry alias IModelService Service */\n\n  register(ModelRegistry);\n  /** 注册 Graph 相关的ModelService  */\n\n  register(GraphModelContribution);\n  /** 注册 Command 相关的ModelService  */\n\n  register(CommandModelContribution);\n});\nexport var registerModelServiceConfig = function registerModelServiceConfig(register, config) {\n  register({\n    token: IModelOptionProvider,\n    useDynamic: function useDynamic() {\n      return {\n        getOption: function getOption() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", config.getConfig());\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      };\n    },\n    lifecycle: Syringe.Lifecycle.singleton\n  });\n};\n/** 组件的 config 模块，必须要加载 */\n\nexport var createModule = function createModule(config) {\n  return Module(function (register) {\n    /** 绑定 ModelService  配置 */\n    registerModelServiceConfig(register, config);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}