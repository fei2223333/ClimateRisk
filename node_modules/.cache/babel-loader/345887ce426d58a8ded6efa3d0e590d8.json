{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { useExtensionRegistry } from './extension-context';\nexport function XFlowAppExtensionMoudle(props) {\n  var _this = this;\n\n  var createModule = props.createModule,\n      children = props.children;\n  /** 获取扩展Registry */\n\n  var extensionRegistry = useExtensionRegistry();\n  /** Config */\n\n  var config = React.useMemo(function () {\n    return props.config || {\n      CONFIG_TYPE: '',\n      getConfig: function getConfig() {\n        return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", {});\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      }\n    };\n  },\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(function () {\n    /** 注册 extension 到 Registry */\n    var disposable = extensionRegistry.addExtension({\n      config: config,\n      createModule: createModule\n    });\n    return function () {\n      disposable.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  /** 可以 Wrap Children组件 */\n\n  if (Array.isArray(children) || React.isValidElement(children)) {\n    return React.createElement(React.Fragment, null, \" \", children, \" \");\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}