{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport var CoordManager = /*#__PURE__*/function (_Base) {\n  _inherits(CoordManager, _Base);\n\n  function CoordManager() {\n    _classCallCheck(this, CoordManager);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CoordManager).apply(this, arguments));\n  }\n\n  _createClass(CoordManager, [{\n    key: \"getClientMatrix\",\n    value: function getClientMatrix() {\n      return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the window.\n     */\n\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n      var rect = this.view.svg.getBoundingClientRect();\n      return new Point(rect.left, rect.top);\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the document.\n     */\n\n  }, {\n    key: \"getPageOffset\",\n    value: function getPageOffset() {\n      // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n      return this.getClientOffset().translate(window.scrollX, window.scrollY);\n    }\n  }, {\n    key: \"snapToGrid\",\n    value: function snapToGrid(x, y) {\n      var p = typeof x === 'number' ? this.clientToLocalPoint(x, y) : this.clientToLocalPoint(x.x, x.y);\n      return p.snapToGrid(this.graph.getGridSize());\n    }\n  }, {\n    key: \"localToGraphPoint\",\n    value: function localToGraphPoint(x, y) {\n      var localPoint = Point.create(x, y);\n      return Dom.transformPoint(localPoint, this.graph.matrix());\n    }\n  }, {\n    key: \"localToClientPoint\",\n    value: function localToClientPoint(x, y) {\n      var localPoint = Point.create(x, y);\n      return Dom.transformPoint(localPoint, this.getClientMatrix());\n    }\n  }, {\n    key: \"localToPagePoint\",\n    value: function localToPagePoint(x, y) {\n      var p = typeof x === 'number' ? this.localToGraphPoint(x, y) : this.localToGraphPoint(x);\n      return p.translate(this.getPageOffset());\n    }\n  }, {\n    key: \"localToGraphRect\",\n    value: function localToGraphRect(x, y, width, height) {\n      var localRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(localRect, this.graph.matrix());\n    }\n  }, {\n    key: \"localToClientRect\",\n    value: function localToClientRect(x, y, width, height) {\n      var localRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(localRect, this.getClientMatrix());\n    }\n  }, {\n    key: \"localToPageRect\",\n    value: function localToPageRect(x, y, width, height) {\n      var rect = typeof x === 'number' ? this.localToGraphRect(x, y, width, height) : this.localToGraphRect(x);\n      return rect.translate(this.getPageOffset());\n    }\n  }, {\n    key: \"graphToLocalPoint\",\n    value: function graphToLocalPoint(x, y) {\n      var graphPoint = Point.create(x, y);\n      return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n    }\n  }, {\n    key: \"clientToLocalPoint\",\n    value: function clientToLocalPoint(x, y) {\n      var clientPoint = Point.create(x, y);\n      return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n    }\n  }, {\n    key: \"clientToGraphPoint\",\n    value: function clientToGraphPoint(x, y) {\n      var clientPoint = Point.create(x, y);\n      return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n  }, {\n    key: \"pageToLocalPoint\",\n    value: function pageToLocalPoint(x, y) {\n      var pagePoint = Point.create(x, y);\n      var graphPoint = pagePoint.diff(this.getPageOffset());\n      return this.graphToLocalPoint(graphPoint);\n    }\n  }, {\n    key: \"graphToLocalRect\",\n    value: function graphToLocalRect(x, y, width, height) {\n      var graphRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n    }\n  }, {\n    key: \"clientToLocalRect\",\n    value: function clientToLocalRect(x, y, width, height) {\n      var clientRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n    }\n  }, {\n    key: \"clientToGraphRect\",\n    value: function clientToGraphRect(x, y, width, height) {\n      var clientRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n  }, {\n    key: \"pageToLocalRect\",\n    value: function pageToLocalRect(x, y, width, height) {\n      var graphRect = Rectangle.create(x, y, width, height);\n      var pageOffset = this.getPageOffset();\n      graphRect.x -= pageOffset.x;\n      graphRect.y -= pageOffset.y;\n      return this.graphToLocalRect(graphRect);\n    }\n  }]);\n\n  return CoordManager;\n}(Base);","map":null,"metadata":{},"sourceType":"module"}