{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport { IconStore, MODELS, XFlowGraphCommands } from '@antv/xflow-core';\nimport { ZoomInOutlined, ZoomOutOutlined, OneToOneOutlined, CompressOutlined, FullscreenOutlined, FullscreenExitOutlined } from '@ant-design/icons';\nimport { createToolbarConfig } from '../canvas-toolbar';\nexport var CANVAS_SCALE_TOOLBAR_CONFIG;\n\n(function (CANVAS_SCALE_TOOLBAR_CONFIG) {\n  IconStore.set('ZoomInOutlined', ZoomInOutlined);\n  IconStore.set('ZoomOutOutlined', ZoomOutOutlined);\n  IconStore.set('OneToOneOutlined', OneToOneOutlined);\n  IconStore.set('CompressOutlined', CompressOutlined);\n  IconStore.set('FullscreenOutlined', FullscreenOutlined);\n  IconStore.set('FullscreenExitOutlined', FullscreenExitOutlined);\n  CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_IN = XFlowGraphCommands.GRAPH_ZOOM.id + '-zoom-in';\n  CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_OUT = XFlowGraphCommands.GRAPH_ZOOM.id + '-zoom-out';\n  CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_ONE = XFlowGraphCommands.GRAPH_ZOOM.id + '-scale-to-one';\n  CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_FIT = XFlowGraphCommands.GRAPH_ZOOM.id + '-scale-to-fit';\n  CANVAS_SCALE_TOOLBAR_CONFIG.FULLSCREEN = XFlowGraphCommands.GRAPH_ZOOM.id + '-fullscreen';\n  CANVAS_SCALE_TOOLBAR_CONFIG.MAX_SCALE = 1.5;\n  CANVAS_SCALE_TOOLBAR_CONFIG.MIN_SCALE = 0.05;\n  CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions = {\n    maxScale: CANVAS_SCALE_TOOLBAR_CONFIG.MAX_SCALE,\n    minScale: CANVAS_SCALE_TOOLBAR_CONFIG.MIN_SCALE\n  };\n\n  CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig = function (_ref) {\n    var zoomFactor = _ref.zoomFactor,\n        fullscreen = _ref.fullscreen;\n    return [{\n      name: 'main',\n      items: [{\n        id: CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_IN,\n        tooltip: '放大',\n        iconName: 'ZoomInOutlined',\n        onClick: function onClick(_ref2) {\n          var commandService = _ref2.commandService;\n          commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {\n            factor: 0.1,\n            zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions\n          });\n        }\n      }, {\n        id: CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_OUT,\n        tooltip: '缩小',\n        iconName: 'ZoomOutOutlined',\n        onClick: function onClick(_ref3) {\n          var commandService = _ref3.commandService;\n          commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {\n            factor: -0.1,\n            zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions\n          });\n        }\n      }, {\n        id: CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_ONE,\n        iconName: 'OneToOneOutlined',\n        tooltip: '缩放到1:1',\n        isEnabled: zoomFactor !== 1,\n        onClick: function onClick(_ref4) {\n          var commandService = _ref4.commandService;\n          commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {\n            factor: 'real',\n            zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions\n          });\n        }\n      }, {\n        id: CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_FIT,\n        tooltip: '缩放到适应屏幕',\n        iconName: 'CompressOutlined',\n        onClick: function onClick(_ref5) {\n          var commandService = _ref5.commandService;\n          commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {\n            factor: 'fit',\n            zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions\n          });\n        }\n      }, {\n        id: CANVAS_SCALE_TOOLBAR_CONFIG.FULLSCREEN,\n        tooltip: !fullscreen ? '全屏' : '退出全屏',\n        iconName: !fullscreen ? 'FullscreenOutlined' : 'FullscreenExitOutlined',\n        onClick: function onClick(_ref6) {\n          var commandService = _ref6.commandService;\n          commandService.executeCommand(XFlowGraphCommands.GRAPH_FULLSCREEN.id, {});\n        }\n      }]\n    }];\n  };\n})(CANVAS_SCALE_TOOLBAR_CONFIG || (CANVAS_SCALE_TOOLBAR_CONFIG = {}));\n\nexport var TOOLBAR_TYPE = 'CANVAS_SCALE_TOOLBAR';\nexport var useConfig = createToolbarConfig(function (config) {\n  config.setToolbarModelService(function (model, modelService) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var graphScale, graphFullscreenModel, graphScaleModel;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return MODELS.GRAPH_SCALE.useValue(modelService);\n\n            case 2:\n              graphScale = _context2.sent;\n\n              /** 设置初始值*/\n              model.setValue(function (m) {\n                m.mainGroups = CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig({\n                  zoomFactor: graphScale.zoomFactor,\n                  fullscreen: false\n                });\n              });\n              _context2.next = 6;\n              return MODELS.GRAPH_FULLSCREEN.getModel(modelService);\n\n            case 6:\n              graphFullscreenModel = _context2.sent;\n\n              /** 全屏 */\n              graphFullscreenModel.watch(function (fullscreen) {\n                model.setValue(function (m) {\n                  m.mainGroups = CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig({\n                    zoomFactor: graphScale.zoomFactor,\n                    fullscreen: fullscreen\n                  });\n                });\n              });\n              _context2.next = 10;\n              return MODELS.GRAPH_SCALE.getModel(modelService);\n\n            case 10:\n              graphScaleModel = _context2.sent;\n\n              /** graphScaleModel更新时联动 Toolbar*/\n              graphScaleModel.watch(function (_ref7) {\n                var zoomFactor = _ref7.zoomFactor;\n                return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var fullscreen;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return MODELS.GRAPH_FULLSCREEN.useValue(modelService);\n\n                        case 2:\n                          fullscreen = _context.sent;\n                          model.setValue(function (m) {\n                            m.mainGroups = CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig({\n                              zoomFactor: zoomFactor,\n                              fullscreen: fullscreen\n                            });\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  });\n});","map":null,"metadata":{},"sourceType":"module"}