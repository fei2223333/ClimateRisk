{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport 'antd/dist/antd.css';\nimport '../../styles/SpineLayout.less';\nimport TemplateChart from './TemplateChart';\nexport var SpineLayout = /*#__PURE__*/function (_Component) {\n  _inherits(SpineLayout, _Component);\n\n  function SpineLayout() {\n    _classCallCheck(this, SpineLayout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SpineLayout).apply(this, arguments));\n  }\n\n  _createClass(SpineLayout, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"home-spine-layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SpineContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TemplateChart, {\n        data: this.props.home.parsedData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return SpineLayout;\n}(Component);\n/* istanbul ignore next */\n\nSpineLayout.propTypes = {\n  home: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    home: state.home\n  };\n}\n/* istanbul ignore next */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(_objectSpread({}, actions), dispatch)\n  };\n}\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(SpineLayout);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SpineLayout, \"SpineLayout\", \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/src/features/home/SpineLayout.js"],"names":["React","Component","PropTypes","bindActionCreators","connect","actions","TemplateChart","SpineLayout","props","home","parsedData","propTypes","object","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAO,oBAAP;AACA,OAAO,+BAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,WAAaC,WAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAMW;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,eAEQ,oBAAC,aAAD;AAAgB,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADF;AAMD;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAiCT,SAAjC;AAgBA;;AAhBaM,W,CACJI,S,GAAY;AACjBF,EAAAA,IAAI,EAAEP,SAAS,CAACU,MAAV,CAAiBC,UADN;AAEjBR,EAAAA,OAAO,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AAFT,C;;AAgBrB,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAEM,KAAK,CAACN;AADP,GAAP;AAGD;AAED;;;AACA,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLZ,IAAAA,OAAO,EAAEF,kBAAkB,mBAAME,OAAN,GAAiBY,QAAjB;AADtB,GAAP;AAGD;;eAEcb,OAAO,CACpBU,eADoB,EAEpBE,kBAFoB,CAAP,CAGbT,WAHa,C;;AAAf;;;;;;;;;;0BA9BaA,W;0BAiBJO,e;0BAOAE,kB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport 'antd/dist/antd.css';\nimport '../../styles/SpineLayout.less';\nimport TemplateChart from './TemplateChart';\n\n\nexport class SpineLayout extends Component {\n  static propTypes = {\n    home: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"home-spine-layout\">\n              <SpineContent></SpineContent>\n              <TemplateChart  data={this.props.home.parsedData}/>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nfunction mapStateToProps(state) {\n  return {\n    home: state.home,\n  };\n}\n\n/* istanbul ignore next */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...actions }, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SpineLayout);\n"]},"metadata":{},"sourceType":"module"}