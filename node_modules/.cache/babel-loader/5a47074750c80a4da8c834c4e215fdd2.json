{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { ManaSyringe, DisposableCollection, MenuItemType, IModelContribution, IModelService, RxModel, Disposable } from '@antv/xflow-core';\nimport { MODELS } from '@antv/xflow-core';\nimport { CONTEXT_MENU_MODEL } from '../interface';\nimport { ContextMenuConfig } from '../config';\nvar inject = ManaSyringe.inject,\n    singleton = ManaSyringe.singleton;\n/**\n * IModelContribution\n */\n\nvar CanvasContextMenuContribution = /*#__PURE__*/function () {\n  function CanvasContextMenuContribution() {\n    var _this = this;\n\n    _classCallCheck(this, CanvasContextMenuContribution);\n\n    /** 注册 model */\n    this.toDispose = new DisposableCollection();\n    /** 获取 MenuModel */\n\n    this.getMenuModelValue = function (contextMenuInfo) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var config, anchor, type, cell, toDispose, data, menuModel, renderProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.menuConfig.getConfig();\n\n              case 2:\n                config = _context.sent;\n\n                /** 获取坐标 */\n                anchor = contextMenuInfo.anchor, type = contextMenuInfo.type, cell = contextMenuInfo.cell;\n                /** 获取Menu */\n\n                toDispose = new DisposableCollection();\n                this.toDispose.push(toDispose);\n                data = cell ? cell.getData() : null;\n                menuModel = new RxModel({\n                  id: 'menuroot',\n                  type: MenuItemType.Root,\n                  submenu: []\n                });\n                toDispose.push(Disposable.create(function () {\n                  menuModel.dispose();\n                }));\n                renderProps = {\n                  toDispose: toDispose,\n                  anchor: anchor,\n                  target: {\n                    data: data,\n                    type: type\n                  },\n                  customRender: null,\n                  menuModel: menuModel\n                };\n\n                if (!config.menuCustomRender) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 13;\n                return config.menuCustomRender(contextMenuInfo, this.modelService);\n\n              case 13:\n                renderProps.customRender = _context.sent;\n\n              case 14:\n                if (!config.menuModelService) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 17;\n                return config.menuModelService(contextMenuInfo, renderProps.menuModel, this.modelService, toDispose);\n\n              case 17:\n                return _context.abrupt(\"return\", renderProps);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    };\n  }\n  /** 注册 MenuModel */\n\n\n  _createClass(CanvasContextMenuContribution, [{\n    key: \"registerModel\",\n    value: function registerModel(registry) {\n      var _this2 = this;\n\n      var toDispose = [registry.registerModel({\n        id: CONTEXT_MENU_MODEL.id,\n        getInitialValue: function getInitialValue() {\n          return null;\n        },\n        watchChange: function watchChange(self, modelService) {\n          return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            var _this3 = this;\n\n            var contextMenuModel;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return MODELS.CONTEXTMENU_TARGET.getModel(modelService);\n\n                  case 2:\n                    contextMenuModel = _context3.sent;\n                    return _context3.abrupt(\"return\", contextMenuModel.watch(function (contextMenuInfo) {\n                      return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                        var contextMenuValue;\n                        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                _context2.next = 2;\n                                return this.getMenuModelValue(contextMenuInfo);\n\n                              case 2:\n                                contextMenuValue = _context2.sent;\n                                self.setValue(contextMenuValue);\n\n                              case 4:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, _callee2, this);\n                      }));\n                    }));\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n        }\n      })];\n      this.toDispose.pushAll(toDispose);\n    }\n  }]);\n\n  return CanvasContextMenuContribution;\n}();\n\n__decorate([inject(ContextMenuConfig), __metadata(\"design:type\", ContextMenuConfig)], CanvasContextMenuContribution.prototype, \"menuConfig\", void 0);\n\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], CanvasContextMenuContribution.prototype, \"modelService\", void 0);\n\nCanvasContextMenuContribution = __decorate([singleton({\n  contrib: [IModelContribution]\n})], CanvasContextMenuContribution);\nexport { CanvasContextMenuContribution };","map":null,"metadata":{},"sourceType":"module"}