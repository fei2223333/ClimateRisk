{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Base } from './base';\nexport var ClipboardManager = /*#__PURE__*/function (_Base) {\n  _inherits(ClipboardManager, _Base);\n\n  function ClipboardManager() {\n    _classCallCheck(this, ClipboardManager);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ClipboardManager).apply(this, arguments));\n  }\n\n  _createClass(ClipboardManager, [{\n    key: \"init\",\n    value: function init() {\n      this.widget = this.graph.hook.createClipboard();\n      this.widget.deserialize(this.instanceOptions);\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      if (this.disabled) {\n        this.instanceOptions.enabled = true;\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.disabled) {\n        this.instanceOptions.enabled = false;\n      }\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.disabled) {\n        this.widget.copy(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.disabled) {\n        this.widget.cut(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n    }\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var graph = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.graph;\n\n      if (!this.disabled) {\n        return this.widget.paste(graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n\n      return [];\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(force) {\n      if (!this.disabled || force) {\n        this.widget.clean();\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.widget.isEmpty();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.clean(true);\n    }\n  }, {\n    key: \"commonOptions\",\n    get: function get() {\n      var _a = this.instanceOptions,\n          enabled = _a.enabled,\n          others = __rest(_a, [\"enabled\"]);\n\n      return others;\n    }\n  }, {\n    key: \"instanceOptions\",\n    get: function get() {\n      return this.options.clipboard;\n    }\n  }, {\n    key: \"cells\",\n    get: function get() {\n      return this.widget.cells;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.instanceOptions.enabled !== true;\n    }\n  }]);\n\n  return ClipboardManager;\n}(Base);\n\n__decorate([Base.dispose()], ClipboardManager.prototype, \"dispose\", null);","map":null,"metadata":{},"sourceType":"module"}