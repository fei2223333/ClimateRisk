{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nexport var defaultFormSchemaService = function defaultFormSchemaService(args) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _a, targetType, isGroup, groupSchema, nodeSchema, edgeSchema;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            targetType = args.targetType;\n            isGroup = (_a = args.targetData) === null || _a === void 0 ? void 0 : _a.isGroup;\n            groupSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '分组名',\n                    name: 'group-service',\n                    shape: 'group-service',\n                    placeholder: '分组名称'\n                  }]\n                }]\n              }]\n            };\n            nodeSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '节点名',\n                    name: 'node-service',\n                    shape: 'node-service',\n                    placeholder: '节点名称'\n                  }]\n                }]\n              }]\n            };\n            edgeSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '边',\n                    name: 'edge-service',\n                    shape: 'edge-service',\n                    placeholder: '边名称'\n                  }]\n                }]\n              }]\n            };\n\n            if (!isGroup) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", groupSchema);\n\n          case 7:\n            if (!(targetType === 'node')) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", nodeSchema);\n\n          case 9:\n            if (!(targetType === 'edge')) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", edgeSchema);\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '',\n                    name: 'canvas-service',\n                    shape: 'canvas-service'\n                  }]\n                }]\n              }]\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}