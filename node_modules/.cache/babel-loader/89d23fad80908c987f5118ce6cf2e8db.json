{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport var ModelServiceRegistry = function ModelServiceRegistry(props) {\n  var config = props.config;\n  /** 获取配置中心 */\n\n  var extensionRegistry = useExtensionRegistry();\n  /** 获取ModelService的配置 */\n\n  var modelServiceConfig = React.useMemo(function () {\n    return config ? config : new ModelServiceConfig();\n  },\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: modelServiceConfig,\n      createModule: createModule\n    });\n    modelServiceConfig.setMountState();\n    return function () {\n      disposable.dispose();\n      modelServiceConfig.dispose();\n    }; // 不要移除：保证 只生执行一次\n    // eslint-disable-next-line\n  }, []);\n  return null;\n};\nModelServiceRegistry.defaultProps = {\n  XFlowModuleType: 'ModelServiceConfig'\n};\nexport var createModelServiceConfig = function createModelServiceConfig(addOptions) {\n  return function (value) {\n    /** bridge config and value */\n    var valueContainer = React.useMemo(function () {\n      return {\n        getValue: function getValue() {\n          return {};\n        }\n      };\n    }, []);\n\n    valueContainer.getValue = function () {\n      return value;\n    };\n\n    var hookConfig = React.useMemo(function () {\n      var config = new ModelServiceConfig();\n      addOptions(config, valueContainer);\n      return config;\n    }, [valueContainer]);\n    return hookConfig;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}