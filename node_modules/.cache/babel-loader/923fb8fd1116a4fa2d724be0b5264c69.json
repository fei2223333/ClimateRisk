{"ast":null,"code":"import React from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { WorkspacePanel } from '../base-panel';\nimport { NodePanelBody } from './panel-body';\nimport { NodePanelHeader } from './panel-header';\nimport { NodePanelFooter } from './panel-footer';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useTreePanelData, NsNodeTreePanelModel } from './service';\nimport * as NsNodeTreePanel from './interface';\n\nvar NodeTreePanelMain = function NodeTreePanelMain(props) {\n  var _usePanelLyaoutStyle = usePanelLyaoutStyle(props),\n      headerStyle = _usePanelLyaoutStyle.headerStyle,\n      bodyStyle = _usePanelLyaoutStyle.bodyStyle,\n      footerStyle = _usePanelLyaoutStyle.footerStyle;\n\n  var _useTreePanelData = useTreePanelData(props),\n      state = _useTreePanelData.state,\n      onFolderExpand = _useTreePanelData.onFolderExpand,\n      onKeywordChange = _useTreePanelData.onKeywordChange;\n\n  return React.createElement(React.Fragment, null, React.createElement(NodePanelHeader, Object.assign({}, props, {\n    state: state,\n    style: headerStyle,\n    onKeywordChange: onKeywordChange\n  })), React.createElement(NodePanelBody, Object.assign({}, props, {\n    state: state,\n    style: bodyStyle,\n    onFolderExpand: onFolderExpand\n  })), React.createElement(NodePanelFooter, Object.assign({}, props, {\n    state: state,\n    style: footerStyle\n  })));\n};\n\nvar NodeTreePanel = function NodeTreePanel(props) {\n  var prefixClz = useXflowPrefixCls('node-dnd-panel');\n  return React.createElement(WorkspacePanel, Object.assign({}, props, {\n    className: prefixClz\n  }), React.createElement(NodeTreePanelMain, Object.assign({}, props, {\n    prefixClz: prefixClz\n  })));\n};\n\nexport { NodeTreePanel, NsNodeTreePanelModel, NsNodeTreePanel };","map":null,"metadata":{},"sourceType":"module"}