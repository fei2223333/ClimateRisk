{"ast":null,"code":"import React from 'react';\nimport { XFlowHookConfig, createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { HookConfig } from '../config';\nexport var HookRegistry = function HookRegistry(props) {\n  /** 获取配置中心 */\n  var extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  var hookConfig = React.useMemo(function () {\n    return props.config ? props.config : new XFlowHookConfig();\n  }, // 不要移除：保证config只生成一次\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: hookConfig,\n      createModule: createModule\n    });\n    return function () {\n      disposable.dispose();\n      hookConfig.dispose();\n    };\n  }, [extensionRegistry, hookConfig]);\n  return null;\n};\nexport var createHookConfig = function createHookConfig(addOptions) {\n  return function (value) {\n    /** bridge config and value */\n    var valueContainer = React.useMemo(function () {\n      return {\n        getValue: function getValue() {\n          return {};\n        }\n      };\n    }, []);\n\n    valueContainer.getValue = function () {\n      return value;\n    };\n\n    var hookConfig = React.useMemo(function () {\n      var config = new HookConfig();\n      addOptions(config, valueContainer);\n      return config;\n    }, [valueContainer]);\n    return hookConfig;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}