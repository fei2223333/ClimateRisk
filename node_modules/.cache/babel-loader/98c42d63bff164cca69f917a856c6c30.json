{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/ServiceWebsite/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Emitter } from './event';\nimport { Disposable } from './disposable';\nexport var DisposableCollection = /*#__PURE__*/function () {\n  function DisposableCollection() {\n    _classCallCheck(this, DisposableCollection);\n\n    this.disposables = [];\n    this.onDisposeEmitter = new Emitter();\n    this.disposingElements = false;\n\n    for (var _len = arguments.length, toDispose = new Array(_len), _key = 0; _key < _len; _key++) {\n      toDispose[_key] = arguments[_key];\n    }\n\n    this.pushAll(toDispose);\n  }\n\n  _createClass(DisposableCollection, [{\n    key: \"checkDisposed\",\n    value: function checkDisposed() {\n      if (this.disposed && !this.disposingElements) {\n        this.onDisposeEmitter.fire(undefined);\n        this.onDisposeEmitter.dispose();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.disposed || this.disposingElements) {\n        return;\n      }\n\n      this.disposingElements = true;\n\n      while (!this.disposed) {\n        try {\n          this.disposables.pop().dispose();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      this.disposingElements = false;\n      this.checkDisposed();\n    }\n  }, {\n    key: \"push\",\n    value: function push(disposable) {\n      var _this = this;\n\n      var disposables = this.disposables;\n      disposables.push(disposable);\n      var originalDispose = disposable.dispose.bind(disposable);\n      var toRemove = Disposable.create(function () {\n        var index = disposables.indexOf(disposable);\n\n        if (index !== -1) {\n          disposables.splice(index, 1);\n        }\n\n        _this.checkDisposed();\n      });\n\n      disposable.dispose = function () {\n        toRemove.dispose();\n        originalDispose();\n      };\n\n      return toRemove;\n    }\n  }, {\n    key: \"pushAll\",\n    value: function pushAll(disposables) {\n      var _this2 = this;\n\n      return disposables.map(function (disposable) {\n        return _this2.push(disposable);\n      });\n    }\n  }, {\n    key: \"disposed\",\n    get: function get() {\n      return this.disposables.length === 0;\n    }\n  }, {\n    key: \"onDispose\",\n    get: function get() {\n      return this.onDisposeEmitter.event;\n    }\n  }]);\n\n  return DisposableCollection;\n}();","map":null,"metadata":{},"sourceType":"module"}