{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar filterOutLinks = function filterOutLinks(k, v) {\n  if (k !== \"next\" && k !== \"prev\") {\n    return v;\n  }\n};\n\nvar unlink = function unlink(entry) {\n  entry.prev.next = entry.next;\n  entry.next.prev = entry.prev;\n  delete entry.next;\n  delete entry.prev;\n};\n\nvar List =\n/** @class */\nfunction () {\n  function List() {\n    var shortcut = {};\n    shortcut.prev = shortcut;\n    shortcut.next = shortcut.prev;\n    this.shortcut = shortcut;\n  }\n\n  List.prototype.dequeue = function () {\n    var shortcut = this.shortcut;\n    var entry = shortcut.prev;\n\n    if (entry && entry !== shortcut) {\n      unlink(entry);\n      return entry;\n    }\n  };\n\n  List.prototype.enqueue = function (entry) {\n    var shortcut = this.shortcut;\n\n    if (entry.prev && entry.next) {\n      unlink(entry);\n    }\n\n    entry.next = shortcut.next;\n    shortcut.next.prev = entry;\n    shortcut.next = entry;\n    entry.prev = shortcut;\n  };\n\n  List.prototype.toString = function () {\n    var strs = [];\n    var sentinel = this.shortcut;\n    var curr = sentinel.prev;\n\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr === null || curr === void 0 ? void 0 : curr.prev;\n    }\n\n    return \"[\".concat(strs.join(\", \"), \"]\");\n  };\n\n  return List;\n}();\n\nexports.default = List;","map":null,"metadata":{},"sourceType":"script"}