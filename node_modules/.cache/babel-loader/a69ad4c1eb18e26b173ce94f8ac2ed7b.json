{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar extendStatics = Object.setPrototypeOf || {\n  __proto__: []\n} instanceof Array && function (d, b) {\n  d.__proto__ = b; // eslint-disable-line no-proto\n} || function (d, b) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (var p in b) {\n    if (Object.prototype.hasOwnProperty.call(b, p)) {\n      d[p] = b[p];\n    }\n  }\n};\n/**\n * @see https://github.com/microsoft/TypeScript/blob/5c85febb0ce9d6088cbe9b09cb42f73f9ee8ea05/src/compiler/transformers/es2015.ts#L4309\n */\n// eslint-disable-next-line\n\n\nexport function inherit(cls, base) {\n  extendStatics(cls, base);\n\n  function tmp() {\n    this.constructor = cls;\n  }\n\n  cls.prototype = base === null ? Object.create(base) : (tmp.prototype = base.prototype, new tmp());\n}\n\nvar A = function A() {\n  _classCallCheck(this, A);\n};\n\nvar isNativeClass = /^\\s*class\\s+/.test(\"\".concat(A)) || /^\\s*class\\s*\\{/.test(\"\".concat( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  return _class;\n}()));\n/**\n * Extends class with specified class name.\n */\n\nexport function createClass(className, base) {\n  var cls;\n\n  if (isNativeClass) {\n    cls = /*#__PURE__*/function (_base) {\n      _inherits(cls, _base);\n\n      function cls() {\n        _classCallCheck(this, cls);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(cls).apply(this, arguments));\n      }\n\n      return cls;\n    }(base);\n  } else {\n    cls = function cls() {\n      return base.apply(this, arguments); // eslint-disable-line\n    };\n\n    inherit(cls, base);\n  }\n\n  Object.defineProperty(cls, 'name', {\n    value: className\n  });\n  return cls;\n}","map":null,"metadata":{},"sourceType":"module"}