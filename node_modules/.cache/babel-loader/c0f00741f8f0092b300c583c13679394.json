{"ast":null,"code":"import _slicedToArray from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useReducer } from 'react';\nexport var Portal;\n\n(function (Portal) {\n  var active = false;\n  var dispatch;\n\n  var reducer = function reducer(state, action) {\n    var payload = action.payload;\n\n    switch (action.type) {\n      case 'add':\n        {\n          var index = state.findIndex(function (item) {\n            return item.id === payload.id;\n          });\n\n          if (index >= 0) {\n            state[index] = payload;\n            return _toConsumableArray(state);\n          }\n\n          return [].concat(_toConsumableArray(state), [payload]);\n        }\n\n      case 'remove':\n        {\n          var _index = state.findIndex(function (item) {\n            return item.id === payload.id;\n          });\n\n          if (_index >= 0) {\n            var result = _toConsumableArray(state);\n\n            result.splice(_index, 1);\n            return result;\n          }\n\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n\n    return state;\n  };\n\n  function connect(id, portal) {\n    if (active) {\n      dispatch({\n        type: 'add',\n        payload: {\n          id: id,\n          portal: portal\n        }\n      });\n    }\n  }\n\n  Portal.connect = connect;\n\n  function disconnect(id) {\n    if (active) {\n      dispatch({\n        type: 'remove',\n        payload: {\n          id: id\n        }\n      });\n    }\n  }\n\n  Portal.disconnect = disconnect;\n\n  function isActive() {\n    return active;\n  }\n\n  Portal.isActive = isActive;\n\n  function getProvider() {\n    // eslint-disable-next-line react/display-name\n    return function () {\n      active = true;\n\n      var _useReducer = useReducer(reducer, []),\n          _useReducer2 = _slicedToArray(_useReducer, 2),\n          items = _useReducer2[0],\n          mutate = _useReducer2[1];\n\n      dispatch = mutate; // eslint-disable-next-line react/no-children-prop\n\n      return React.createElement(React.Fragment, {\n        children: items.map(function (item) {\n          return item.portal;\n        })\n      });\n    };\n  }\n\n  Portal.getProvider = getProvider;\n})(Portal || (Portal = {}));","map":null,"metadata":{},"sourceType":"module"}