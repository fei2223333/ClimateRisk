{"ast":null,"code":"import _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nexport var MiniMapManager = /*#__PURE__*/function (_Base) {\n  _inherits(MiniMapManager, _Base);\n\n  function MiniMapManager() {\n    _classCallCheck(this, MiniMapManager);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MiniMapManager).apply(this, arguments));\n  }\n\n  _createClass(MiniMapManager, [{\n    key: \"init\",\n    value: function init() {\n      this.widget = this.graph.hook.createMiniMap();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.widget) {\n        this.widget.dispose();\n      }\n    }\n  }, {\n    key: \"widgetOptions\",\n    get: function get() {\n      return this.options.minimap;\n    }\n  }]);\n\n  return MiniMapManager;\n}(Base);\n\n__decorate([Base.dispose()], MiniMapManager.prototype, \"dispose\", null);","map":null,"metadata":{},"sourceType":"module"}