{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLayoutByName = exports.unRegisterLayout = exports.registerLayout = void 0;\n\nvar base_1 = require(\"../layout/base\");\n\nvar util_1 = require(\"../util\");\n\nvar map = new Map();\n\nvar registerLayout = function registerLayout(name, layoutOverride) {\n  if (map.get(name)) {\n    console.warn(\"The layout with the name \".concat(name, \" exists already, it will be overridden\"));\n  }\n\n  if ((0, util_1.isObject)(layoutOverride)) {\n    // tslint:disable-next-line: max-classes-per-file\n    var GLayout =\n    /** @class */\n    function (_super) {\n      __extends(GLayout, _super);\n\n      function GLayout(cfg) {\n        var _this = _super.call(this) || this;\n\n        var self = _this;\n        var props = {};\n        var defaultCfg = self.getDefaultCfg();\n        Object.assign(props, defaultCfg, layoutOverride, cfg);\n        Object.keys(props).forEach(function (key) {\n          var value = props[key];\n          self[key] = value;\n        });\n        return _this;\n      }\n\n      return GLayout;\n    }(base_1.Base);\n\n    map.set(name, GLayout);\n  } else {\n    map.set(name, layoutOverride);\n  }\n\n  return map.get(name);\n};\n\nexports.registerLayout = registerLayout;\n\nvar unRegisterLayout = function unRegisterLayout(name) {\n  if (map.has(name)) {\n    map.delete(name);\n  }\n};\n\nexports.unRegisterLayout = unRegisterLayout;\n\nvar getLayoutByName = function getLayoutByName(name) {\n  if (map.has(name)) {\n    return map.get(name);\n  }\n\n  return null;\n};\n\nexports.getLayoutByName = getLayoutByName;","map":null,"metadata":{},"sourceType":"script"}