{"ast":null,"code":"import { Path, Point } from '../../geometry';\nexport var loop = function loop(sourcePoint, targetPoint, routePoints) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var fix = routePoints.length === 3 ? 0 : 1;\n  var p1 = Point.create(routePoints[0 + fix]);\n  var p2 = Point.create(routePoints[2 + fix]);\n  var center = Point.create(routePoints[1 + fix]);\n\n  if (!Point.equals(sourcePoint, targetPoint)) {\n    var middle = new Point((sourcePoint.x + targetPoint.x) / 2, (sourcePoint.y + targetPoint.y) / 2);\n    var angle = middle.angleBetween(Point.create(sourcePoint).rotate(90, middle), center);\n\n    if (angle > 1) {\n      p1.rotate(180 - angle, middle);\n      p2.rotate(180 - angle, middle);\n      center.rotate(180 - angle, middle);\n    }\n  }\n\n  var pathData = \"\\n     M \".concat(sourcePoint.x, \" \").concat(sourcePoint.y, \"\\n     Q \").concat(p1.x, \" \").concat(p1.y, \" \").concat(center.x, \" \").concat(center.y, \"\\n     Q \").concat(p2.x, \" \").concat(p2.y, \" \").concat(targetPoint.x, \" \").concat(targetPoint.y, \"\\n  \");\n  return options.raw ? Path.parse(pathData) : pathData;\n};","map":null,"metadata":{},"sourceType":"module"}