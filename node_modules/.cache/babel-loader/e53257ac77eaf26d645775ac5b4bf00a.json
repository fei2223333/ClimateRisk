{"ast":null,"code":"import _objectSpread from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { HOME_UPLOAD_FILE_BEGIN, HOME_UPLOAD_FILE_SUCCESS, HOME_UPLOAD_FILE_FAILURE, HOME_UPLOAD_FILE_DISMISS_ERROR } from './constants';\nimport Axios from 'Axios';\nexport function uploadFile(formData) {\n  return function (dispatch) {\n    // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_UPLOAD_FILE_BEGIN\n    });\n    Axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com/';\n    return Axios({\n      method: 'post',\n      url: 'posts',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (_ref) {\n      var data = _ref.data;\n      console.log(data);\n      dispatch({\n        type: HOME_UPLOAD_FILE_SUCCESS,\n        data: data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: HOME_UPLOAD_FILE_FAILURE,\n        data: {\n          error: err\n        }\n      });\n    }); // .finally(() => {\n    //   this.setState({\n    //     uploading: false,\n    //   });\n    // });\n    // const promise = new Promise((resolve, reject) => {\n    //   const doRequest = args.error ? Promise.reject(new Error()) : Promise.resolve();\n    //   doRequest.then(\n    //     (res) => {\n    //       resolve(res);\n    //     },\n    //     // Use rejectHandler as the second argument so that render errors won't be caught.\n    //     (err) => {\n    //       reject(err);\n    //     },\n    //   );\n    // });\n    // return promise;\n  };\n}\nexport function dismissUploadFileError() {\n  return {\n    type: HOME_UPLOAD_FILE_DISMISS_ERROR\n  };\n}\nexport function useUploadFile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      uploadFilePending: state.home.uploadFilePending,\n      uploadFileError: state.home.uploadFileError\n    };\n  }, shallowEqual),\n      uploadFilePending = _useSelector.uploadFilePending,\n      uploadFileError = _useSelector.uploadFileError;\n\n  var boundAction = useCallback(function () {\n    return dispatch(uploadFile.apply(void 0, arguments));\n  }, [dispatch]);\n  var boundDismissError = useCallback(function () {\n    return dispatch(dismissUploadFileError());\n  }, [dispatch]);\n  return {\n    uploadFile: boundAction,\n    uploadFilePending: uploadFilePending,\n    uploadFileError: uploadFileError,\n    dismissUploadFileError: boundDismissError\n  };\n}\n\n__signature__(useUploadFile, \"useDispatch{dispatch}\\nuseSelector{{ uploadFilePending, uploadFileError }}\\nuseCallback{boundAction}\\nuseCallback{boundDismissError}\", function () {\n  return [useDispatch, useSelector];\n});\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_UPLOAD_FILE_BEGIN:\n      // Just after a request is sent\n      return _objectSpread({}, state, {\n        uploadFilePending: true,\n        uploadFileError: null\n      });\n\n    case HOME_UPLOAD_FILE_SUCCESS:\n      // The request is success\n      return _objectSpread({}, state, {\n        uploadFilePending: false,\n        uploadFileError: null\n      });\n\n    case HOME_UPLOAD_FILE_FAILURE:\n      // The request is failed\n      return _objectSpread({}, state, {\n        uploadFilePending: false,\n        uploadFileError: action.data.error\n      });\n\n    case HOME_UPLOAD_FILE_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return _objectSpread({}, state, {\n        uploadFileError: null\n      });\n\n    default:\n      return state;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(uploadFile, \"uploadFile\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(dismissUploadFileError, \"dismissUploadFileError\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(useUploadFile, \"useUploadFile\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/redux/uploadFile.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/redux/uploadFile.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shuge/Documents/project/rekit-project/Spine/src/features/home/redux/uploadFile.js"],"names":["useEffect","useCallback","useDispatch","useSelector","shallowEqual","HOME_UPLOAD_FILE_BEGIN","HOME_UPLOAD_FILE_SUCCESS","HOME_UPLOAD_FILE_FAILURE","HOME_UPLOAD_FILE_DISMISS_ERROR","Axios","uploadFile","formData","dispatch","type","defaults","baseURL","method","url","data","headers","then","console","log","catch","err","error","dismissUploadFileError","useUploadFile","state","uploadFilePending","home","uploadFileError","boundAction","boundDismissError","reducer","action"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  HOME_UPLOAD_FILE_BEGIN,\n  HOME_UPLOAD_FILE_SUCCESS,\n  HOME_UPLOAD_FILE_FAILURE,\n  HOME_UPLOAD_FILE_DISMISS_ERROR,\n} from './constants';\nimport Axios from 'Axios';\n\nexport function uploadFile(formData) {\n  return (dispatch) => { // optionally you can have getState as the second argument\n    dispatch({\n      type: HOME_UPLOAD_FILE_BEGIN,\n    });\n\n    Axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com/';\n    return Axios({\n      method: 'post',\n      url: 'posts',\n      data: formData,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then(({ data }) => {\n        console.log(data);\n        dispatch({\n            type: HOME_UPLOAD_FILE_SUCCESS,\n            data: data,\n          });\n      })\n      .catch(err => {\n        dispatch({\n            type: HOME_UPLOAD_FILE_FAILURE,\n            data: { error: err },\n          });\n      })\n      // .finally(() => {\n      //   this.setState({\n      //     uploading: false,\n      //   });\n      // });\n\n    // const promise = new Promise((resolve, reject) => {\n    //   const doRequest = args.error ? Promise.reject(new Error()) : Promise.resolve();\n    //   doRequest.then(\n    //     (res) => {\n          \n    //       resolve(res);\n    //     },\n    //     // Use rejectHandler as the second argument so that render errors won't be caught.\n    //     (err) => {\n          \n    //       reject(err);\n    //     },\n    //   );\n    // });\n\n    // return promise;\n  };\n}\n\nexport function dismissUploadFileError() {\n  return {\n    type: HOME_UPLOAD_FILE_DISMISS_ERROR,\n  };\n}\n\nexport function useUploadFile() {\n  const dispatch = useDispatch();\n\n  const { uploadFilePending, uploadFileError } = useSelector(\n    state => ({\n      uploadFilePending: state.home.uploadFilePending,\n      uploadFileError: state.home.uploadFileError,\n    }),\n    shallowEqual,\n  );\n\n  const boundAction = useCallback((...args) => {\n    return dispatch(uploadFile(...args));\n  }, [dispatch]);\n\n  const boundDismissError = useCallback(() => {\n    return dispatch(dismissUploadFileError());\n  }, [dispatch]);\n\n  return {\n    uploadFile: boundAction,\n    uploadFilePending,\n    uploadFileError,\n    dismissUploadFileError: boundDismissError,\n  };\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case HOME_UPLOAD_FILE_BEGIN:\n      // Just after a request is sent\n      return {\n        ...state,\n        uploadFilePending: true,\n        uploadFileError: null,\n      };\n\n    case HOME_UPLOAD_FILE_SUCCESS:\n      // The request is success\n      return {\n        ...state,\n        uploadFilePending: false,\n        uploadFileError: null,\n      };\n\n    case HOME_UPLOAD_FILE_FAILURE:\n      // The request is failed\n      return {\n        ...state,\n        uploadFilePending: false,\n        uploadFileError: action.data.error,\n      };\n\n    case HOME_UPLOAD_FILE_DISMISS_ERROR:\n      // Dismiss the request failure error\n      return {\n        ...state,\n        uploadFileError: null,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}