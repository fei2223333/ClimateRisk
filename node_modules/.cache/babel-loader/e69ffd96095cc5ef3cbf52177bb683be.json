{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { HookConfig } from '../config';\nimport { singleton, inject } from 'mana-syringe';\nimport { IHookContribution } from '../interface';\nexport var NsGraphEventPlugin;\n\n(function (NsGraphEventPlugin) {\n  NsGraphEventPlugin.pluginId = 'GraphEventPlugin';\n})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\n\nvar RuntimeContribution = function RuntimeContribution() {\n  var _this = this;\n\n  _classCallCheck(this, RuntimeContribution);\n\n  this.toDispose = new DisposableCollection();\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$this$hookConfi, hookRegisterFn, d;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.hookConfig.getConfig();\n\n            case 2:\n              _yield$this$hookConfi = _context.sent;\n              hookRegisterFn = _yield$this$hookConfi.hookRegisterFn;\n              d = hookRegisterFn(hooks);\n              return _context.abrupt(\"return\", Disposable.create(function () {\n                d.dispose();\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n  };\n\n  this.registerHookHub = function (registry) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$this$hookConfi2, hookhubRegisterFn, d;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.hookConfig.getConfig();\n\n            case 2:\n              _yield$this$hookConfi2 = _context2.sent;\n              hookhubRegisterFn = _yield$this$hookConfi2.hookhubRegisterFn;\n              d = hookhubRegisterFn(registry);\n              return _context2.abrupt(\"return\", Disposable.create(function () {\n                d.dispose();\n              }));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n  };\n};\n\n__decorate([inject(HookConfig), __metadata(\"design:type\", HookConfig)], RuntimeContribution.prototype, \"hookConfig\", void 0);\n\nRuntimeContribution = __decorate([singleton({\n  contrib: IHookContribution\n})], RuntimeContribution);\nexport { RuntimeContribution };","map":null,"metadata":{},"sourceType":"module"}