{"ast":null,"code":"var doDFS = function doDFS(graph, node, postorder, visited, navigator, result) {\n  if (!visited.includes(node)) {\n    visited.push(node);\n\n    if (!postorder) {\n      result.push(node);\n    }\n\n    navigator(node).forEach(function (n) {\n      return doDFS(graph, n, postorder, visited, navigator, result);\n    });\n\n    if (postorder) {\n      result.push(node);\n    }\n  }\n};\n\nvar dfs = function dfs(graph, node, order) {\n  var nodes = Array.isArray(node) ? node : [node];\n\n  var navigator = function navigator(n) {\n    return graph.isDirected() ? graph.successors(n) : graph.neighbors(n);\n  };\n\n  var results = [];\n  var visited = [];\n  nodes.forEach(function (node) {\n    if (!graph.hasNode(node)) {\n      throw new Error('Graph does not have node: ' + node);\n    } else {\n      doDFS(graph, node, order === 'post', visited, navigator, results);\n    }\n  });\n  return results;\n};\n\nexport default dfs;","map":null,"metadata":{},"sourceType":"module"}