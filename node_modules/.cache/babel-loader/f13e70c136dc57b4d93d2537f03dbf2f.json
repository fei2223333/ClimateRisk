{"ast":null,"code":"import { getString, getNumber } from './util';\nexport function outline() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var color = getString(args.color, 'blue');\n  var width = getNumber(args.width, 1);\n  var margin = getNumber(args.margin, 2);\n  var opacity = getNumber(args.opacity, 1);\n  var innerRadius = margin;\n  var outerRadius = margin + width;\n  return \"\\n    <filter>\\n      <feFlood flood-color=\\\"\".concat(color, \"\\\" flood-opacity=\\\"\").concat(opacity, \"\\\" result=\\\"colored\\\"/>\\n      <feMorphology in=\\\"SourceAlpha\\\" result=\\\"morphedOuter\\\" operator=\\\"dilate\\\" radius=\\\"\").concat(outerRadius, \"\\\" />\\n      <feMorphology in=\\\"SourceAlpha\\\" result=\\\"morphedInner\\\" operator=\\\"dilate\\\" radius=\\\"\").concat(innerRadius, \"\\\" />\\n      <feComposite result=\\\"morphedOuterColored\\\" in=\\\"colored\\\" in2=\\\"morphedOuter\\\" operator=\\\"in\\\"/>\\n      <feComposite operator=\\\"xor\\\" in=\\\"morphedOuterColored\\\" in2=\\\"morphedInner\\\" result=\\\"outline\\\"/>\\n      <feMerge>\\n        <feMergeNode in=\\\"outline\\\"/>\\n        <feMergeNode in=\\\"SourceGraphic\\\"/>\\n      </feMerge>\\n    </filter>\\n  \").trim();\n}","map":null,"metadata":{},"sourceType":"module"}