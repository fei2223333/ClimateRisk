{"ast":null,"code":"import { debounce } from './util';\nexport function createSensor(element) {\n  var sensor = null;\n  var listeners = [];\n\n  var create = function create() {\n    if (getComputedStyle(element).position === 'static') {\n      var style = element.style;\n      style.position = 'relative';\n    }\n\n    var obj = document.createElement('object');\n\n    obj.onload = function () {\n      obj.contentDocument.defaultView.addEventListener('resize', trigger);\n      trigger();\n    };\n\n    obj.style.display = 'block';\n    obj.style.position = 'absolute';\n    obj.style.top = '0';\n    obj.style.left = '0';\n    obj.style.height = '100%';\n    obj.style.width = '100%';\n    obj.style.overflow = 'hidden';\n    obj.style.pointerEvents = 'none';\n    obj.style.zIndex = '-1';\n    obj.style.opacity = '0';\n    obj.setAttribute('tabindex', '-1');\n    obj.type = 'text/html';\n    element.appendChild(obj); // for ie, should set data attribute delay, or will be white screen\n\n    obj.data = 'about:blank';\n    return obj;\n  };\n\n  var trigger = debounce(function () {\n    listeners.forEach(function (listener) {\n      return listener(element);\n    });\n  });\n\n  var bind = function bind(listener) {\n    if (!sensor) {\n      sensor = create();\n    }\n\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  var destroy = function destroy() {\n    if (sensor && sensor.parentNode) {\n      if (sensor.contentDocument) {\n        sensor.contentDocument.defaultView.removeEventListener('resize', trigger);\n      }\n\n      sensor.parentNode.removeChild(sensor);\n      sensor = null;\n      listeners = [];\n    }\n  };\n\n  var unbind = function unbind(listener) {\n    var idx = listeners.indexOf(listener);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // no listener, and sensor is exist then destroy the sensor\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n}","map":null,"metadata":{},"sourceType":"module"}