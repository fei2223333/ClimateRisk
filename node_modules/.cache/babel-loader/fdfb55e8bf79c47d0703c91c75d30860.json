{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/shuge/Documents/project/rekit-project/Spine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __awaiter } from \"tslib\";\nimport { Deferred } from '../common/deferred';\nimport { Disposable } from '../common/disposable';\nexport var NsContext;\n\n(function (NsContext) {\n  NsContext.CONFIG_TYPE = 'CONTEXT_CONFIG';\n})(NsContext || (NsContext = {}));\n\nvar noop = function noop() {\n  return Disposable.create(function () {});\n};\n\nexport var KeybindingConfig = function KeybindingConfig() {\n  var _this = this;\n\n  _classCallCheck(this, KeybindingConfig);\n\n  /** CONFIG_TYPE */\n  this.CONFIG_TYPE = NsContext.CONFIG_TYPE;\n  /** 外部注册context的方法 */\n\n  this.keybindingFunc = noop;\n  /** 是否已加载 */\n\n  this.isMounted = new Deferred();\n\n  this.setKeybindingFunc = function (fn) {\n    _this.keybindingFunc = fn;\n  };\n\n  this.setMountState = function () {\n    _this.isMounted.resolve(true);\n  };\n\n  this.getConfig = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.isMounted.promise;\n\n            case 2:\n              return _context.abrupt(\"return\", {\n                CONFIG_TYPE: this.CONFIG_TYPE,\n                registerKeybindingFunc: this.keybindingFunc\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n  };\n\n  this.dispose = function () {\n    _this.keybindingFunc = noop;\n    _this.isMounted = new Deferred();\n  };\n};","map":null,"metadata":{},"sourceType":"module"}